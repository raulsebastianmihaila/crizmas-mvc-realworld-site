{"version":3,"file":"settings.bundle-b054ab59683cbae7a4a4.js","mappings":"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","sources":["webpack:///./src/js/pages/settings/settings-controller.js","webpack:///./src/js/pages/settings/settings.js"],"sourcesContent":["import {controller} from 'crizmas-mvc';\nimport Form, {validation, required} from 'crizmas-form';\n\nimport router from '../../router';\nimport {currentUser} from '../../models/user';\nimport userController, {getUsernameValidator, getPasswordValidator} from '../../controllers/user';\n\nexport default controller(function SettingsController() {\n  const ctrl = {\n    userController,\n    form: null,\n    serverErrors: null\n  };\n\n  ctrl.onEnter = () => {\n    if (!currentUser.isAuthenticated) {\n      router.transitionTo('/login');\n\n      return false;\n    }\n\n    init();\n  };\n\n  const init = () => {\n    ctrl.form = new Form({\n      children: [\n        {\n          name: 'image',\n          initialValue: currentUser.image\n        },\n        {\n          name: 'username',\n          initialValue: currentUser.username,\n          validate: validation(required(), getUsernameValidator())\n        },\n        {\n          name: 'bio',\n          initialValue: currentUser.bio\n        },\n        {\n          name: 'email',\n          initialValue: currentUser.email,\n          validate: required()\n        },\n        {\n          name: 'password',\n          validate: getPasswordValidator()\n        }\n      ],\n\n      actions: {\n        submit: () => {\n          ctrl.update(ctrl.form.getResult());\n        }\n      },\n\n      onFormChange: () => {\n        ctrl.serverErrors = null;\n      }\n    });\n  };\n\n  ctrl.update = ({username, email, password, image, bio}) => {\n    ctrl.serverErrors = null;\n\n    return userController.update({username, email, password, image, bio}).then(\n      () => {\n        router.transitionTo('/');\n      },\n\n      (serverErrors) => {\n        ctrl.serverErrors = serverErrors;\n      }\n    );\n  };\n\n  ctrl.logout = () => {\n    userController.logout();\n    router.transitionTo('/');\n  };\n\n  return ctrl;\n});\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Input} from 'crizmas-components';\n\nexport default class Settings extends Component {\n  constructor() {\n    super();\n\n    this.onSubmit = (e) => {\n      e.preventDefault();\n      this.props.controller.form.submit();\n    };\n\n    this.onClickLogout = () => {\n      this.props.controller.logout();\n    };\n  }\n\n  render() {\n    const {form, serverErrors, isPending} = this.props.controller;\n\n    return <div className=\"settings-page\">\n      <div className=\"container page\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3 col-xs-12\">\n            <h1 className=\"text-xs-center\">Your Settings</h1>\n\n            {serverErrors && <ul className=\"error-messages\">\n              {serverErrors.map((error, i) => <li key={i}>{error}</li>)}\n            </ul>}\n\n            <form onSubmit={this.onSubmit}>\n              <fieldset>\n                <fieldset className=\"form-group\">\n                  <Input\n                    inputClassName=\"form-control\"\n                    type=\"text\"\n                    placeholder=\"URL of profile picture\"\n                    disabled={isPending}\n                    {...form.get('image')} />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <Input\n                    inputClassName=\"form-control form-control-lg\"\n                    type=\"text\"\n                    placeholder=\"Your Name\"\n                    disabled={isPending}\n                    {...form.get('username')} />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <Input\n                    inputClassName=\"form-control form-control-lg\"\n                    type=\"textarea\"\n                    placeholder=\"Short bio about you\"\n                    inputProps={{rows: \"8\"}}\n                    disabled={isPending}\n                    {...form.get('bio')} />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <Input\n                    inputClassName=\"form-control form-control-lg\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    disabled={isPending}\n                    {...form.get('email')} />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <Input\n                    inputClassName=\"form-control form-control-lg\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    disabled={isPending}\n                    {...form.get('password')} />\n                </fieldset>\n                <button\n                  className=\"btn btn-lg btn-primary pull-xs-right\"\n                  disabled={isPending}>Update Settings</button>\n              </fieldset>\n            </form>\n\n            <hr />\n\n            <button\n              className=\"btn btn-outline-danger\"\n              disabled={isPending}\n              onClick={this.onClickLogout}>Or click here to logout.</button>\n          </div>\n        </div>\n      </div>\n    </div>;\n  }\n}\n\nSettings.propTypes = {\n  controller: PropTypes.object.isRequired\n};\n"],"names":["controller","ctrl","userController","form","serverErrors","currentUser","router","init","Form","children","name","initialValue","validate","validation","required","getUsernameValidator","getPasswordValidator","actions","submit","update","getResult","onFormChange","username","email","password","image","bio","then","logout","Settings","Component","constructor","super","this","onSubmit","e","preventDefault","props","onClickLogout","render","isPending","className","map","error","i","key","inputClassName","type","placeholder","disabled","get","inputProps","rows","onClick","propTypes","PropTypes"],"sourceRoot":""}