{"version":3,"sources":["webpack:///./node_modules/crizmas-components/index.js","webpack:///./node_modules/crizmas-components/src/utils.js","webpack:///./node_modules/smart-mix/src/mixin.js","webpack:///./node_modules/crizmas-components/src/components/render-clip/render-clip.js","webpack:///./node_modules/crizmas-components/src/controllers/render-clip/render-clip.js","webpack:///./node_modules/crizmas-components/src/controllers/render-clip/render-clip-1d-definition.js","webpack:///./node_modules/crizmas-components/src/components/input.js","webpack:///./node_modules/crizmas-components/src/components/render-clip/render-clip-2d.js","webpack:///./node_modules/crizmas-components/src/components/tree.js","webpack:///./node_modules/crizmas-components/src/controllers/render-clip/render-clip-1d-mixin.js","webpack:///./node_modules/crizmas-components/src/controllers/render-clip/render-clip-same-size-1d-mixin.js","webpack:///./node_modules/crizmas-components/src/controllers/render-clip/render-clip-individual-size-1d-mixin.js","webpack:///./node_modules/crizmas-components/src/controllers/render-clip/render-clip-2d.js","webpack:///./node_modules/crizmas-components/src/controllers/render-clip/render-clip-1d.js","webpack:///./node_modules/crizmas-components/src/controllers/tree.js"],"names":["module","exports","utils","Input","RenderClip","RenderClip2D","Tree","RenderClipController","RenderClip2DController","TreeController","isModule","fitContentValue","stickyValue","detectFitContentValue","div","document","createElement","style","width","detectStickyValue","position","moduleExports","debounce","func","delay","timeout","args","clearTimeout","setTimeout","apply","this","function","getFitContentValue","getStickyValue","window","crizmas","componentUtils","setMethods","methods","target","mixinMethods","forEach","key","hasOwnProp","Error","method","isFunc","isObj","value","Function","prototype","call","bind","Object","hasOwnProperty","mixinFunc","mixinProvider","context","state","contextMethods","mixMethods","meta","mix","getContext","defineProperties","getOwnPropertyDescriptors","getState","mixin","React","PropTypes","Component","super","containerRef","createRef","renderedItemsRef","syncHeightAfterRender","renderedItemsCount","orthogonalScrollSizeProp","onRender","props","controller","mustResetOrthogonalMinSize","mustReapplyLastOperationForSizeSync","mustReapplyLastOperationForSizeSyncIfChangesMade","lastOperationForSizeSync","renderedItemsStyle","current","changesMade","orthogonalMinSizeProp","isOrthogonalOverflow","onWindowResize","refresh","isVertical","setDomContainer","addEventListener","prevProps","removeEventListener","renderedItemsStartIndex","trimmedStartNegativeSize","virtualTotalItemsSize","isScrollVirtualized","items","getRealItemSize","onScroll","renderItem","ref","height","overflow","whiteSpace","paddingPosition","orthogonalSizeProp","sizeProp","overflowProp","transform","translateProp","Array","from","length","v","index","itemIndex","itemSizeProp","item","left","top","zIndex","propTypes","object","isRequired","Mvc","getRenderClip1DDefinition","itemsCount","itemHeight","itemWidth","definition","ctrl","ctrlMixState","ctrlMix","refreshWithCurrentRealScrollPosition","ignore","afterSizeSyncChecksHook","syncResolutionDefaults","init","renderClip1DMixin","renderClipSameSize1DMixin","renderClipIndividualSize1DMixin","isSameItemSize","renderClipExtraMix","observe","getGetRealItemSizeDefinition","isVal","defaultDebounce","defaultBoolDebounce","numberRegExp","partialNumberRegExp","integerRegExp","partialIntegerRegExp","allowedHtmlInputTypes","isBoolHtmlInputType","type","valuesNormalizer","number","initialValue","undefined","Number","integer","string","trim","text","textarea","valueTypesGuards","test","valueChangeGuards","oldValue","initOnChange","setOnChangeMethod","isInputPending","setState","e","onStartPending","onChange","checked","valueTypeGuard","valueChangeGuard","normalizer","normalizedValue","inputDebounce","errors","required","placeholder","className","onBlur","readOnly","disabled","autoFocus","inputClassName","inputProps","hasErrors","assign","includes","map","error","i","any","oneOf","array","bool","defaultProps","contextTypes","verticalRenderClipController","horizontalRenderClipController","mustReapplyVerticalLastOperationForSizeSync","verticalLastOperationForSizeSync","mustReapplyHorizontalLastOperationForSizeSync","horizontalLastOperationForSizeSync","renderRow","renderCell","overflowY","overflowX","rowIndex","renderCells","cellIndex","renderArrayTreeNode","indentation","renderExpandToggle","treeArray","toggleExpand","paddingLeft","level","children","data","label","renderClipController","marginRight","onClick","String","fromCodePoint","isExpanded","directions","vertical","Symbol","horizontal","mixState","currentVirtualScrollPosition","preserveRealScrollPosition","lastPreserveRealScrollVirtualScrollPosition","isVirtualScrollPositionSetProgramatically","checkItemsCountConsistency","templateUpdateNonVirtualized","templateSetItemsCount","setPreservingRealScrollPosition","direction","domContainer","setItems","setItemsCount","afterUpdatingItemsCountHook","updateNonVirtualized","virtualScrollPosition","realScrollPosition","Math","min","realScrollSpace","virtualScrollSpace","trunc","realVirtualScrollSpaceRatio","containerScrollPosition","scrollPositionProp","updateRenderedItems","afterUpdatingRenderingInfoHook","wasOrhotogonalOverflow","prevIsOrthogonalOverflow","isVirtualizationEmptySpace","hookResult","wasVirtualScrollPositionSetProgramatically","scrollDif","isTranslatedVirtualization","abs","sign","max","refreshWithRealScrollPosition","realScrollPosition_","scrollIntoView","ifNeeded","alignEnd","fit","getStartScrollPositionForIndex","realIndexScrollPosition","getRealItemPosition","realIndexEndAlignedScrollTop","containerClientSize","scrollToFit","scrollTo","scrollPosition","clientSizeProp","orthogonalClientSizeProp","realTotalItemsSize","containerOrthogonalScrollSize","containerOrthogonalClientSize","realItemSize","realBeforeViewportWholeItemsCount","getWholeRealItemsCountInSpace","realAfterViewportWholeItemsCount","realViewportItemsCount","realBeforeViewportWholeItemsSize","realStartTrimmedSize","space","itemsPositions","setRealTotalItemsSize","getRealTotalItemsSizeAndPositions","totalRenderedItemsSize","lastItemIndexInSpace","firstRenderedItemIndex","lastItemIndexInSpacePosition","renderedItemsSpaceStart","getLastItemInSpaceInfo","spaceEndFromLastIndexBeforePosition","renderedItemsSpaceEnd","fromPositionClosestIndex","renderedItemsFromEndClosestIndex","lastIndex","searchClosestFromBeforeIndex","positionReached","fromIndex","midIndex","floor","midIndexPosition","RenderClip1DController","verticalItemsCount","horizontalItemsCount","nodes","nodes_","tree","initTreeItems","initTreeArray","getTreeNodes","childrenLevel","node","getTreeArray","treeNodes","treeNode","push","setNodes","treeNodeIndex","indexOf","nodeSubtreeArray","prevArray","slice","afterArray","nodeSubtreeLength","getSubTreeNodeLength","splice","reduce","sum","childTreeNode"],"mappings":"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","file":"vendors~article~editor~login~register~settings.bundle-ad3ead57966ce672109b.js","sourcesContent":["module.exports = {\n  utils: require('./src/utils'),\n  Input: require('./src/components/input'),\n  RenderClip: require('./src/components/render-clip/render-clip'),\n  RenderClip2D: require('./src/components/render-clip/render-clip-2d'),\n  Tree: require('./src/components/tree'),\n  RenderClipController: require('./src/controllers/render-clip/render-clip'),\n  RenderClip2DController: require('./src/controllers/render-clip/render-clip-2d'),\n  TreeController: require('./src/controllers/tree')\n};\n","(() => {\n  'use strict';\n\n  const isModule = typeof module === 'object' && typeof module.exports === 'object';\n\n  let fitContentValue;\n  let stickyValue;\n\n  const debounce = (func, delay) => {\n    let timeout;\n\n    // make sure the function is not a constructor\n    return ({\n      function(...args) {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n          func.apply(this, args);\n        }, delay);\n      }\n    }).function;\n  };\n\n  const getFitContentValue = () => {\n    if (!fitContentValue) {\n      fitContentValue = detectFitContentValue();\n    }\n\n    return fitContentValue;\n  };\n\n  const detectFitContentValue = () => {\n    const div = document.createElement('div');\n\n    div.style.width = 'fit-content';\n\n    if (div.style.width === 'fit-content') {\n      return 'fit-content';\n    }\n\n    return '-moz-fit-content';\n  };\n\n  const getStickyValue = () => {\n    if (!stickyValue) {\n      stickyValue = detectStickyValue();\n    }\n\n    return stickyValue;\n  };\n\n  const detectStickyValue = () => {\n    const div = document.createElement('div');\n\n    div.style.position = 'sticky';\n\n    if (div.style.position === 'sticky') {\n      return 'sticky';\n    }\n\n    // Safari requires the prefix\n    return '-webkit-sticky';\n  };\n\n  const moduleExports = {\n    debounce,\n    getFitContentValue,\n    getStickyValue\n  };\n\n  if (isModule) {\n    module.exports = moduleExports;\n  } else {\n    window.crizmas = window.crizmas || {};\n    window.crizmas.componentUtils = moduleExports;\n  }\n})();\n","(() => {\n  'use strict';\n\n  const isModule = typeof module === 'object' && typeof module.exports === 'object';\n\n  // the mixin function takes a mixin callback in order to create a mixin provider function.\n  // the mixin provider function mixes methods on certain target objects.\n  // when calling the mixin provider function, the mixin callback is passed the optional context\n  // and optional state options in order to obtain the mixin methods container object.\n  // the context is the target of the optional contextMethods option, which is an array of keys\n  // used to get the mixin methods from the mixin methods container object.\n  // a new mix object is created and returned.\n  // the optional mixMethods option is an array of keys used to get the mixin methods from\n  // the mixin methods container object and set them on the mix object.\n  // the meta option can be used to tell the mixin mechanism to lookup the getContext and\n  // getState static methods on the mixin provider function and use any of the\n  // ones it finds to populate the context and state objects that were passed with properties.\n  // the results from getContext are defined into the context object. the results from\n  // getState are defined into the state object. these functions are called with the context\n  // and state objects and they can return an object that provides property descriptors\n  // which are used to define properties on the target object.\n  const mixin = (mixinFunc) => {\n    if (!isFunc(mixinFunc)) {\n      throw new Error('The mixin callback must be a function.');\n    }\n\n    const mixinProvider = ({context, state, contextMethods, mixMethods, meta}) => {\n      const mixinMethods = mixinFunc(context, state);\n      const mix = {};\n\n      if (meta) {\n        if (mixinProvider.getContext) {\n          if (!isObj(context)) {\n            throw new Error('The context must be an object when getContext is provided.');\n          }\n\n          Object.defineProperties(\n            context,\n            Object.getOwnPropertyDescriptors(mixinProvider.getContext(context, state)));\n        }\n\n        if (mixinProvider.getState) {\n          if (!isObj(state)) {\n            throw new Error('The state must be an object when getState is provided.');\n          }\n\n          Object.defineProperties(\n            state,\n            Object.getOwnPropertyDescriptors(mixinProvider.getState(context, state)));\n        }\n      }\n\n      if (contextMethods) {\n        if (!isObj(context)) {\n          throw new Error('The context must be an object when contextMethods is provided.');\n        }\n\n        setMethods(contextMethods, context, mixinMethods);\n      }\n\n      if (mixMethods) {\n        setMethods(mixMethods, mix, mixinMethods);\n      }\n\n      return mix;\n    };\n\n    return mixinProvider;\n  };\n\n  const setMethods = (methods, target, mixinMethods) => {\n    methods.forEach((key) => {\n      if (hasOwnProp(target, key)) {\n        throw new Error(`${key} was already mixed in.`);\n      }\n\n      const method = mixinMethods[key];\n\n      if (!isFunc(method)) {\n        throw new Error('The mixin method must be a function.');\n      }\n\n      target[key] = method;\n    });\n  };\n\n  const isObj = (value) => !!value && typeof value === 'object';\n\n  const isFunc = (value) => typeof value === 'function';\n\n  const hasOwnProp = Function.prototype.call.bind(Object.prototype.hasOwnProperty);\n\n  const moduleExports = mixin;\n\n  if (isModule) {\n    module.exports = moduleExports;\n  } else {\n    window.mixin = moduleExports;\n  }\n})();\n","(() => {\n  'use strict';\n\n  const isModule = typeof module === 'object' && typeof module.exports === 'object';\n\n  let React;\n  let PropTypes;\n  let componentUtils;\n\n  if (isModule) {\n    React = require('react');\n    PropTypes = require('prop-types');\n    componentUtils = require('../../utils');\n  } else {\n    React = window.React;\n    PropTypes = window.PropTypes;\n    ({componentUtils} = window.crizmas);\n  }\n\n  const {Component, createElement} = React;\n  const {getFitContentValue, getStickyValue} = componentUtils;\n\n  const fitContentValue = getFitContentValue();\n  const stickyValue = getStickyValue();\n\n  class RenderClip extends Component {\n    constructor() {\n      super();\n\n      this.containerRef = React.createRef();\n      this.renderedItemsRef = React.createRef();\n\n      this.syncHeightAfterRender = () => {\n        const {renderedItemsCount, orthogonalScrollSizeProp, onRender} = this.props.controller;\n\n        if (!renderedItemsCount) {\n          return;\n        }\n\n        const {mustResetOrthogonalMinSize, mustReapplyLastOperationForSizeSync,\n          mustReapplyLastOperationForSizeSyncIfChangesMade,\n          lastOperationForSizeSync} = onRender();\n        const renderedItemsStyle = this.renderedItemsRef.current.style;\n        let changesMade = false;\n\n        if (mustResetOrthogonalMinSize) {\n          const currentOrthogonalMinSize = renderedItemsStyle[this.orthogonalMinSizeProp];\n\n          changesMade = currentOrthogonalMinSize !== 'unset';\n\n          // the styles in jsx don't overwrite the styles set here\n          renderedItemsStyle[this.orthogonalMinSizeProp] = 'unset';\n        } else if (this.props.controller.isOrthogonalOverflow) {\n          renderedItemsStyle[this.orthogonalMinSizeProp] =\n            `${this.renderedItemsRef.current[orthogonalScrollSizeProp]}px`;\n        }\n\n        if (mustReapplyLastOperationForSizeSync\n          || changesMade && mustReapplyLastOperationForSizeSyncIfChangesMade) {\n          lastOperationForSizeSync();\n        }\n      };\n\n      this.onWindowResize = () => {\n        this.props.controller.refresh();\n      };\n    }\n\n    get sizeProp() {\n      return this.props.controller.isVertical ? 'height' : 'width';\n    }\n\n    get orthogonalSizeProp() {\n      return this.props.controller.isVertical ? 'width' : 'height';\n    }\n\n    get orthogonalMinSizeProp() {\n      return this.props.controller.isVertical ? 'minWidth' : 'minHeight';\n    }\n\n    get paddingPosition() {\n      return this.props.controller.isVertical ? 'top' : 'left';\n    }\n\n    get overflowProp() {\n      return this.props.controller.isVertical ? 'overflowY' : 'overflowX';\n    }\n\n    get translateProp() {\n      return this.props.controller.isVertical ? 'translateY' : 'translateX';\n    }\n\n    get itemSizeProp() {\n      return this.props.controller.isVertical ? 'itemHeight' : 'itemWidth';\n    }\n\n    componentDidMount() {\n      this.props.controller.setDomContainer(this.containerRef.current);\n      window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props.controller !== prevProps.controller) {\n        this.props.controller.setDomContainer(this.containerRef.current);\n      }\n\n      this.syncHeightAfterRender();\n    }\n\n    componentWillUnmount() {\n      this.props.controller.setDomContainer(null);\n      window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    render() {\n      const {\n        controller: {renderedItemsStartIndex, renderedItemsCount, trimmedStartNegativeSize,\n          virtualTotalItemsSize, isScrollVirtualized, items, getRealItemSize, onScroll},\n        renderItem\n      } = this.props;\n\n      return createElement('div', {\n          ref: this.containerRef,\n          style: {\n            position: 'relative',\n            width: '100%',\n            height: '100%',\n            overflow: 'auto',\n            whiteSpace: 'nowrap'\n          },\n          onScroll\n        },\n        !!renderedItemsCount && createElement('div', {\n            ref: this.renderedItemsRef,\n            style: isScrollVirtualized\n              ? {\n                position: stickyValue,\n                [this.paddingPosition]: 0,\n                [this.orthogonalSizeProp]: fitContentValue,\n                [this.sizeProp]: '100%',\n                [this.overflowProp]: 'hidden'\n              }\n              : null\n          },\n          createElement('div', {\n              style: {transform: `${this.translateProp}(${trimmedStartNegativeSize}px)`}\n            },\n            Array.from({length: renderedItemsCount}, (v, index) => {\n              const itemIndex = renderedItemsStartIndex + index;\n\n              return renderItem({\n                index: itemIndex,\n                [this.itemSizeProp]: getRealItemSize(itemIndex),\n                ...items && {item: items[itemIndex]}\n              });\n            }))),\n        !!renderedItemsCount && isScrollVirtualized && createElement('div', {\n          style: {\n            position: 'absolute',\n            left: 0,\n            top: 0,\n            zIndex: -1,\n            [this.orthogonalSizeProp]: '100%',\n            [this.sizeProp]: virtualTotalItemsSize\n          }\n        }));\n    }\n  }\n\n  RenderClip.propTypes = {\n    controller: PropTypes.object.isRequired,\n    renderItem: PropTypes.func.isRequired\n  };\n\n  const moduleExports = RenderClip;\n\n  if (isModule) {\n    module.exports = moduleExports;\n  } else {\n    window.crizmas.RenderClip = moduleExports;\n  }\n})();\n","// this is the render clip controller for one dimension alone (which is not\n// part of a 2d controller)\n\n(() => {\n  'use strict';\n\n  const isModule = typeof module === 'object' && typeof module.exports === 'object';\n\n  let Mvc;\n  let getRenderClip1DDefinition;\n\n  if (isModule) {\n    Mvc = require('crizmas-mvc');\n    getRenderClip1DDefinition = require('./render-clip-1d-definition');\n  } else {\n    ({Mvc, getRenderClip1DDefinition} = window.crizmas);\n  }\n\n  const RenderClip = Mvc.controller(function RenderClip({\n    items,\n    itemsCount,\n    itemHeight,\n    itemWidth\n  } = {}) {\n    const definition = getRenderClip1DDefinition({\n      items,\n      itemsCount,\n      itemHeight,\n      itemWidth\n    });\n    const {ctrl, ctrlMixState, ctrlMix} = definition;\n    let mustResetOrthogonalMinSize = false;\n\n    ctrl.refresh = () => {\n      mustResetOrthogonalMinSize = true;\n\n      ctrlMixState.refreshWithCurrentRealScrollPosition();\n    };\n\n    ctrl.onRender = Mvc.ignore(() => ctrlMix.onRender({\n      afterSizeSyncChecksHook: (syncResolutionDefaults) => {\n        if (mustResetOrthogonalMinSize) {\n          mustResetOrthogonalMinSize = false;\n\n          return {\n            ...syncResolutionDefaults,\n            mustResetOrthogonalMinSize: true,\n            mustReapplyLastOperationForSizeSyncIfChangesMade: true\n          };\n        }\n      }\n    }));\n\n    definition.init();\n\n    return ctrl;\n  });\n\n  const moduleExports = RenderClip;\n\n  if (isModule) {\n    module.exports = moduleExports;\n  } else {\n    window.crizmas = window.crizmas || {};\n    window.crizmas.RenderClipController = moduleExports;\n  }\n})();\n","(() => {\n  'use strict';\n\n  const isModule = typeof module === 'object' && typeof module.exports === 'object';\n\n  let Mvc;\n  let utils;\n  let renderClip1DMixin;\n  let renderClipSameSize1DMixin;\n  let renderClipIndividualSize1DMixin;\n\n  if (isModule) {\n    Mvc = require('crizmas-mvc');\n    utils = require('crizmas-utils');\n    renderClip1DMixin = require('./render-clip-1d-mixin');\n    renderClipSameSize1DMixin = require('./render-clip-same-size-1d-mixin.js');\n    renderClipIndividualSize1DMixin = require('./render-clip-individual-size-1d-mixin.js');\n  } else {\n    ({Mvc, utils, renderClip1DMixin, renderClipSameSize1DMixin,\n      renderClipIndividualSize1DMixin} = window.crizmas);\n  }\n\n  const {isFunc} = utils;\n\n  const getRenderClip1DDefinition = ({\n    items,\n    itemsCount,\n    itemHeight,\n    itemWidth\n  }) => {\n    const ctrlMixState = {};\n    const ctrl = {};\n    const ctrlMix = renderClip1DMixin({\n      meta: true,\n      context: ctrl,\n      state: ctrlMixState,\n      mixMethods: [\n        'init',\n        'refreshWithCurrentRealScrollPosition',\n        'onRender'\n      ],\n      contextMethods: [\n        'setDomContainer',\n        'setItems',\n        'setItemsCount',\n        'onScroll',\n        'scrollIntoView',\n        'scrollToFit',\n        'scrollTo'\n      ]\n    });\n    const isSameItemSize = !isFunc(itemHeight) && !isFunc(itemWidth);\n    const renderClipExtraMix = isSameItemSize\n      ? renderClipSameSize1DMixin({\n        meta: true,\n        context: ctrl,\n        state: ctrlMixState,\n        mixMethods: [\n          'init',\n          'getRealItemSize'\n        ]\n      })\n      : renderClipIndividualSize1DMixin({\n        meta: true,\n        context: ctrl,\n        state: ctrlMixState,\n        mixMethods: [\n          'init',\n          'getGetRealItemSizeDefinition'\n        ]\n      });\n\n    const init = () => {\n      ctrlMix.init({\n        items,\n        itemsCount,\n        itemHeight\n      });\n\n      // we init from mix before so we know if it's vertical or horizontal\n      // in getGetRealItemSizeDefinition\n      ctrl.getRealItemSize = isSameItemSize\n        ? Mvc.ignore(renderClipExtraMix.getRealItemSize)\n        : Mvc.ignore(renderClipExtraMix.getGetRealItemSizeDefinition(itemHeight, itemWidth));\n\n      renderClipExtraMix.init({\n        itemHeight,\n        itemWidth\n      });\n    };\n\n    ctrlMixState.refreshWithCurrentRealScrollPosition =\n      Mvc.observe(ctrlMix.refreshWithCurrentRealScrollPosition);\n\n    return {\n      ctrl,\n      ctrlMixState,\n      ctrlMix,\n      init\n    };\n  };\n\n  const moduleExports = getRenderClip1DDefinition;\n\n  if (isModule) {\n    module.exports = moduleExports;\n  } else {\n    window.crizmas = window.crizmas || {};\n    window.crizmas.getRenderClip1DDefinition = moduleExports;\n  }\n})();\n","(() => {\n  'use strict';\n\n  const isModule = typeof module === 'object' && typeof module.exports === 'object';\n\n  let React;\n  let PropTypes;\n  let utils;\n  let componentUtils;\n\n  if (isModule) {\n    React = require('react');\n    PropTypes = require('prop-types');\n    utils = require('crizmas-utils');\n    componentUtils = require('../utils');\n  } else {\n    React = window.React;\n    PropTypes = window.PropTypes;\n    ({utils, componentUtils} = window.crizmas);\n  }\n\n  const {Component, createElement} = React;\n  const {isVal} = utils;\n  const {debounce} = componentUtils;\n\n  const defaultDebounce = 100;\n  const defaultBoolDebounce = 0;\n  const numberRegExp = /^(-|\\+)?(((\\d+(\\.\\d*)?)|(\\.\\d+))(e(-|\\+)?\\d+)?)$/i;\n  const partialNumberRegExp =\n    /^(-|\\+)?((\\d*(\\.\\d*)?)|((((\\d+(\\.\\d*)?)|(\\.\\d+))(e(-|\\+)?\\d*)?)?))$/i;\n  const integerRegExp = /^(-|\\+)?\\d+$/;\n  const partialIntegerRegExp = /^(-|\\+)?\\d*$/;\n  const allowedHtmlInputTypes = ['text', 'password', 'email', 'url', 'tel', 'search', 'hidden',\n    'radio', 'checkbox'];\n\n  const isBoolHtmlInputType = (type) => type === 'radio' || type === 'checkbox';\n\n  // normalizers convert the final string to the expected value\n  const valuesNormalizer = {\n    number: (value, initialValue) => {\n      if (value === '') {\n        return initialValue === undefined\n          ? initialValue\n          : null;\n      }\n\n      return Number(value);\n    },\n\n    integer: (value, initialValue) => valuesNormalizer.number(value, initialValue),\n\n    string: (value) => value.trim(),\n\n    text: (value) => valuesNormalizer.string(value),\n\n    textarea: (value) => valuesNormalizer.string(value)\n  };\n\n  // type guards disallow unexpected characters in the input\n  const valueTypesGuards = {\n    number: (value) => {\n      return partialNumberRegExp.test(value);\n    },\n\n    integer: (value) => {\n      return partialIntegerRegExp.test(value);\n    }\n  };\n\n  // change guards prevent calling the onChange handler with temporary values.\n  // an example is 3e for real numbers. the e character must be allowed because\n  // the user could enter 3e2, but the intermediary value 3e must not be sent\n  // to the client.\n  const valueChangeGuards = {\n    number: (value) => {\n      return value === '' || numberRegExp.test(value);\n    },\n\n    integer: (value) => {\n      return value === '' || integerRegExp.test(value);\n    },\n\n    string: (value, oldValue) => {\n      oldValue = oldValue || '';\n\n      if (typeof oldValue === 'string') {\n        return oldValue.trim() !== value.trim();\n      }\n\n      return true;\n    },\n\n    text: (value, oldValue) => valueChangeGuards.string(value, oldValue),\n\n    textarea: (value, oldValue) => valueChangeGuards.string(value, oldValue)\n  };\n\n  class Input extends Component {\n    constructor(...args) {\n      super(...args);\n\n      this.state = {\n        value: this.props.value,\n        // last normalized value\n        oldValue: this.props.value\n      };\n\n      this.initOnChange = this.initOnChange.bind(this);\n\n      this.setOnChangeMethod();\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props.debounce !== prevProps.debounce) {\n        this.setOnChangeMethod();\n      }\n\n      // we must ignore the same value when we have an intermediary string representation\n      // like 3.20 (after the 0 there can be a new decimal)\n      if (!this.props.isInputPending && this.props.value !== this.state.oldValue) {\n        this.setState({\n          value: this.props.value,\n          oldValue: this.props.value\n        });\n      }\n    }\n\n    initOnChange(e) {\n      const {type, isInputPending, onStartPending, onChange} = this.props;\n      const value = isBoolHtmlInputType(type)\n        ? e.target.checked\n        : e.target.value;\n      const valueTypeGuard = valueTypesGuards[type];\n\n      if (valueTypeGuard && !valueTypeGuard(value)) {\n        return;\n      }\n\n      this.setState({\n        value\n      });\n\n      const valueChangeGuard = valueChangeGuards[type];\n\n      if (valueChangeGuard && !valueChangeGuard(value, this.state.oldValue)) {\n        return;\n      }\n\n      const normalizer = valuesNormalizer[type];\n      const normalizedValue = normalizer\n        ? normalizer(value, this.props.initialValue)\n        : value;\n\n      this.setState({\n        oldValue: normalizedValue\n      });\n\n      if (!onChange) {\n        return;\n      }\n\n      if (!isInputPending && onStartPending) {\n        onStartPending();\n      }\n\n      this.onChange(normalizedValue);\n    }\n\n    setOnChangeMethod() {\n      const inputDebounce = typeof this.props.debounce === 'number'\n        ? this.props.debounce\n        : isBoolHtmlInputType(this.props.type)\n          ? defaultBoolDebounce\n          : typeof this.context.inputDebounce === 'number'\n            ? this.context.inputDebounce\n            : defaultDebounce;\n\n      this.onChange = inputDebounce === 0\n        ? this.props.onChange\n        : debounce(this.props.onChange, inputDebounce);\n    }\n\n    render() {\n      const {errors, type, required, placeholder, className, onBlur, readOnly,\n        disabled, autoFocus, inputClassName, inputProps} = this.props;\n      const value = isVal(this.state.value)\n        ? this.state.value\n        : '';\n      const hasErrors = !!errors && !!errors.length;\n\n      return createElement('span', {\n          className: `crizmas-input ${hasErrors ? 'has-errors' : ''} ${className}`\n        },\n        !!required && createElement('span', null, '*'),\n        createElement(type === 'textarea' ? type : 'input', Object.assign(\n          {},\n          inputProps,\n          {\n            value,\n            checked: isBoolHtmlInputType(type) && value,\n            type: allowedHtmlInputTypes.includes(type)\n              ? type\n              : 'text',\n            placeholder,\n            onChange: this.initOnChange,\n            onBlur,\n            readOnly,\n            disabled,\n            autoFocus,\n            className: inputClassName\n          }\n        )),\n        hasErrors && createElement('span', null,\n          errors.map((error, i) => createElement('span', {key: i}, error))\n        )\n      );\n    }\n  }\n\n  Input.propTypes = {\n    value: PropTypes.any,\n    initialValue: PropTypes.any,\n    type: PropTypes.oneOf([...allowedHtmlInputTypes, 'string', 'number', 'integer', 'textarea']),\n    errors: PropTypes.array,\n    isInputPending: PropTypes.bool,\n    required: PropTypes.bool,\n    placeholder: PropTypes.string,\n    className: PropTypes.string,\n    inputClassName: PropTypes.string,\n    debounce: PropTypes.number,\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    onStartPending: PropTypes.func,\n    readOnly: PropTypes.bool,\n    disabled: PropTypes.bool,\n    autoFocus: PropTypes.bool,\n    inputProps: PropTypes.object\n  };\n\n  Input.defaultProps = {\n    type: 'text',\n    className: ''\n  };\n\n  Input.contextTypes = {\n    inputDebounce: PropTypes.number\n  };\n\n  const moduleExports = Input;\n\n  if (isModule) {\n    module.exports = moduleExports;\n  } else {\n    window.crizmas.Input = moduleExports;\n  }\n})();\n","(() => {\n  'use strict';\n\n  const isModule = typeof module === 'object' && typeof module.exports === 'object';\n\n  let React;\n  let PropTypes;\n  let componentUtils;\n\n  if (isModule) {\n    React = require('react');\n    PropTypes = require('prop-types');\n    componentUtils = require('../../utils');\n  } else {\n    React = window.React;\n    PropTypes = window.PropTypes;\n    ({componentUtils} = window.crizmas);\n  }\n\n  const {Component, createElement} = React;\n  const {getFitContentValue, getStickyValue} = componentUtils;\n\n  const fitContentValue = getFitContentValue();\n  const stickyValue = getStickyValue();\n\n  class RenderClip2D extends Component {\n    constructor() {\n      super();\n\n      this.containerRef = React.createRef();\n\n      this.syncHeightAfterRender = () => {\n        if (!this.props.controller.verticalRenderClipController.renderedItemsCount\n          || !this.props.controller.horizontalRenderClipController.renderedItemsCount) {\n          return;\n        }\n\n        const {mustReapplyLastOperationForSizeSync: mustReapplyVerticalLastOperationForSizeSync,\n          lastOperationForSizeSync: verticalLastOperationForSizeSync} =\n          this.props.controller.verticalRenderClipController.onRender();\n        const {mustReapplyLastOperationForSizeSync: mustReapplyHorizontalLastOperationForSizeSync,\n          lastOperationForSizeSync: horizontalLastOperationForSizeSync} =\n          this.props.controller.horizontalRenderClipController.onRender();\n\n        if (mustReapplyVerticalLastOperationForSizeSync) {\n          verticalLastOperationForSizeSync();\n        }\n\n        if (mustReapplyHorizontalLastOperationForSizeSync) {\n          horizontalLastOperationForSizeSync();\n        }\n      };\n\n      this.onWindowResize = () => {\n        this.props.controller.refresh();\n      };\n    }\n\n    componentDidMount() {\n      this.props.controller.setDomContainer(this.containerRef.current);\n      window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props.controller !== prevProps.controller) {\n        this.props.controller.setDomContainer(this.containerRef.current);\n      }\n\n      this.syncHeightAfterRender();\n    }\n\n    componentWillUnmount() {\n      this.props.controller.setDomContainer(null);\n      window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    render() {\n      const {\n        controller: {verticalRenderClipController, horizontalRenderClipController, onScroll},\n        renderRow,\n        renderCell\n      } = this.props;\n\n      return createElement('div', {\n          ref: this.containerRef,\n          style: {\n            position: 'relative',\n            width: '100%',\n            height: '100%',\n            overflow: 'auto',\n            whiteSpace: 'nowrap'\n          },\n          onScroll\n        },\n        !!verticalRenderClipController.renderedItemsCount\n          && !!horizontalRenderClipController.renderedItemsCount\n          && createElement('div', {\n              style: {\n                position: stickyValue,\n                top: verticalRenderClipController.isScrollVirtualized ? 0 : 'unset',\n                left: horizontalRenderClipController.isScrollVirtualized ? 0 : 'unset',\n                height: verticalRenderClipController.isScrollVirtualized\n                  ? '100%'\n                  : horizontalRenderClipController.isScrollVirtualized\n                    ? fitContentValue\n                    : 'unset',\n                width: horizontalRenderClipController.isScrollVirtualized\n                  ? '100%'\n                  : verticalRenderClipController.isScrollVirtualized\n                    ? fitContentValue\n                    : 'unset',\n                overflowY: verticalRenderClipController.isScrollVirtualized\n                  ? 'hidden'\n                  : 'unset',\n                overflowX: horizontalRenderClipController.isScrollVirtualized\n                  ? 'hidden'\n                  : 'unset'\n              }\n            },\n            createElement('div', {\n                style: {transform: `translateY(${\n                  verticalRenderClipController.trimmedStartNegativeSize}px) translateX(${\n                  horizontalRenderClipController.trimmedStartNegativeSize}px)`}\n              },\n              Array.from(\n                {length: verticalRenderClipController.renderedItemsCount},\n                (v, index) => {\n                  const rowIndex = verticalRenderClipController.renderedItemsStartIndex + index;\n\n                  return renderRow({\n                    index: rowIndex,\n                    itemHeight: verticalRenderClipController.getRealItemSize(rowIndex),\n                    renderCells: () => Array.from(\n                      {length: horizontalRenderClipController.renderedItemsCount},\n                      (v, index) => {\n                        const cellIndex = horizontalRenderClipController.renderedItemsStartIndex\n                          + index;\n\n                        return renderCell({\n                          index: cellIndex,\n                          itemWidth: horizontalRenderClipController.getRealItemSize(cellIndex),\n                          itemHeight: verticalRenderClipController.getRealItemSize(rowIndex),\n                          rowIndex\n                        });\n                      })\n                  });\n                }))),\n        !!verticalRenderClipController.renderedItemsCount\n          && verticalRenderClipController.isScrollVirtualized\n          && createElement('div', {\n            style: {\n              position: 'absolute',\n              left: 0,\n              top: 0,\n              zIndex: -1,\n              width: '100%',\n              height: verticalRenderClipController.virtualTotalItemsSize\n            }\n          }),\n        !!horizontalRenderClipController.renderedItemsCount\n          && horizontalRenderClipController.isScrollVirtualized\n          && createElement('div', {\n            style: {\n              position: 'absolute',\n              left: 0,\n              top: 0,\n              zIndex: -1,\n              height: '100%',\n              width: horizontalRenderClipController.virtualTotalItemsSize\n            }\n          }));\n    }\n  }\n\n  RenderClip2D.propTypes = {\n    controller: PropTypes.object.isRequired,\n    renderRow: PropTypes.func.isRequired,\n    renderCell: PropTypes.func.isRequired\n  };\n\n  const moduleExports = RenderClip2D;\n\n  if (isModule) {\n    module.exports = moduleExports;\n  } else {\n    window.crizmas.RenderClip2D = moduleExports;\n  }\n})();\n","(() => {\n  'use strict';\n\n  const isModule = typeof module === 'object' && typeof module.exports === 'object';\n\n  let React;\n  let PropTypes;\n  let RenderClip;\n\n  if (isModule) {\n    React = require('react');\n    PropTypes = require('prop-types');\n    RenderClip = require('./render-clip/render-clip');\n  } else {\n    React = window.React;\n    PropTypes = window.PropTypes;\n    ({RenderClip} = window.crizmas);\n  }\n\n  const {Component, createElement} = React;\n\n  class Tree extends Component {\n    constructor() {\n      super();\n\n      this.renderArrayTreeNode = ({index, itemHeight}) => {\n        const {controller, indentation, renderExpandToggle} = this.props;\n        const {treeArray, toggleExpand} = controller;\n        const item = treeArray[index];\n\n        return createElement('div', {\n            key: index,\n            style: {\n              height: itemHeight,\n              paddingLeft: indentation * item.level\n            }\n          },\n          item.children && renderExpandToggle({item, toggleExpand}),\n          item.data.label);\n      };\n    }\n\n    render() {\n      return createElement(RenderClip, {\n        controller: this.props.controller.renderClipController,\n        renderItem: this.renderArrayTreeNode\n      });\n    }\n  }\n\n  Tree.propTypes = {\n    controller: PropTypes.object.isRequired,\n    indentation: PropTypes.number.isRequired,\n    renderExpandToggle: PropTypes.func.isRequired\n  };\n\n  Tree.defaultProps = {\n    indentation: 20,\n    renderExpandToggle: ({item, toggleExpand}) => createElement('span', {\n        style: {marginRight: 5},\n        onClick: toggleExpand.bind(null, item)\n      },\n      String.fromCodePoint(item.isExpanded ? 9660 : 9658))\n  };\n\n  const moduleExports = Tree;\n\n  if (isModule) {\n    module.exports = moduleExports;\n  } else {\n    window.crizmas.Tree = moduleExports;\n  }\n})();\n","// the real clientHeight/Width is the same as the virtual clientHeight/Width\n// the virtual values are view values. they are virtual because if the maximum allowed\n// virtual total size is exceeded, then the virtual item is never displayed and because of this,\n// the entire scrolling configuration is considered virtual.\n// on the other hand, in this case, the scroll that the user sees is the virtual one, so the actual\n// real scrolling is virtualized, while the user sees the real items.\n\n(() => {\n  'use strict';\n\n  const isModule = typeof module === 'object' && typeof module.exports === 'object';\n\n  let mixin;\n\n  if (isModule) {\n    mixin = require('smart-mix');\n  } else {\n    ({mixin} = window);\n  }\n\n  const maxAllowedVirtualTotalItemsSize = 1e6;\n  const maxTranslatedVirtualizationScrollRecomputationDif = 1e2;\n  const smoothTranslatedVirtualizationScrollDif = 40;\n\n  const directions = {\n    vertical: Symbol('vertical'),\n    horizontal: Symbol('horizontal')\n  };\n\n  const getContext = (ctrl, mixState) => ({\n    direction: null,\n    renderedItemsStartIndex: 0,\n    renderedItemsCount: 0,\n    trimmedStartNegativeSize: 0,\n\n    get items() {\n      return mixState.items;\n    },\n\n    get isVertical() {\n      return ctrl.direction === directions.vertical;\n    },\n\n    get clientSizeProp() {\n      return ctrl.isVertical ? 'clientHeight' : 'clientWidth';\n    },\n\n    get scrollPositionProp() {\n      return ctrl.isVertical ? 'scrollTop' : 'scrollLeft';\n    },\n\n    get orthogonalClientSizeProp() {\n      return ctrl.isVertical ? 'clientWidth' : 'clientHeight';\n    },\n\n    get orthogonalScrollSizeProp() {\n      return ctrl.isVertical ? 'scrollWidth' : 'scrollHeight';\n    },\n\n    get containerClientSize() {\n      return mixState.domContainer[ctrl.clientSizeProp];\n    },\n\n    get containerScrollPosition() {\n      // Safari can give out of bounds values for the scroll position\n      return Math.min(\n        Math.max(0, mixState.domContainer[ctrl.scrollPositionProp]),\n        ctrl.virtualScrollSpace);\n    },\n\n    get containerOrthogonalClientSize() {\n      return mixState.domContainer[ctrl.orthogonalClientSizeProp];\n    },\n\n    get containerOrthogonalScrollSize() {\n      return mixState.domContainer[ctrl.orthogonalScrollSizeProp];\n    },\n\n    get virtualTotalItemsSize() {\n      return Math.min(ctrl.realTotalItemsSize, maxAllowedVirtualTotalItemsSize);\n    },\n\n    get realVirtualScrollSpaceRatio() {\n      return !ctrl.virtualScrollSpace && !ctrl.realScrollSpace\n        ? 1\n        : ctrl.realScrollSpace / ctrl.virtualScrollSpace;\n    },\n\n    get virtualScrollSpace() {\n      return Math.max(0, ctrl.virtualTotalItemsSize - ctrl.containerClientSize);\n    },\n\n    get realScrollSpace() {\n      return Math.max(0, ctrl.realTotalItemsSize - ctrl.containerClientSize);\n    },\n\n    get isScrollVirtualized() {\n      return !!mixState.domContainer && ctrl.virtualTotalItemsSize > ctrl.containerClientSize * 3;\n    },\n\n    get isTranslatedVirtualization() {\n      return ctrl.realVirtualScrollSpaceRatio > 1;\n    },\n\n    get isOrthogonalOverflow() {\n      return ctrl.containerOrthogonalScrollSize > ctrl.containerOrthogonalClientSize;\n    }\n  });\n\n  const getState = () => ({\n    itemsCount: 0,\n    items: null,\n    domContainer: null,\n    realScrollPosition: 0,\n    setItemsCount: null,\n    templateSetItemsCount: null,\n    lastOperationForSizeSync: null,\n    prevIsOrthogonalOverflow: false,\n    getRealItemPosition: null,\n    updateNonVirtualized: null,\n    templateUpdateNonVirtualized: null,\n    updateRenderedItems: null,\n    setPreservingRealScrollPosition: null\n  });\n\n  const renderClip1DMixin = mixin((ctrl, mixState) => {\n    let currentVirtualScrollPosition = 0;\n    let preserveRealScrollPosition = false;\n    let lastPreserveRealScrollVirtualScrollPosition = null;\n    let isVirtualScrollPositionSetProgramatically = false;\n    const ctrlMix = {};\n\n    ctrlMix.init = ({\n      items,\n      itemsCount = items ? items.length : 0,\n      itemHeight\n    }) => {\n      checkItemsCountConsistency(items, itemsCount);\n\n      mixState.itemsCount = itemsCount;\n      mixState.items = items;\n      mixState.templateUpdateNonVirtualized = templateUpdateNonVirtualized;\n      mixState.templateSetItemsCount = templateSetItemsCount;\n      mixState.setPreservingRealScrollPosition = setPreservingRealScrollPosition;\n\n      ctrl.direction = itemHeight ? directions.vertical : directions.horizontal;\n    };\n\n    const checkItemsCountConsistency = (items, itemsCount) => {\n      if (items && items.length !== itemsCount) {\n        throw new Error('The passed itemsCount is not equal to the passed items.length.');\n      }\n    };\n\n    ctrlMix.setDomContainer = (domContainer) => {\n      mixState.domContainer = domContainer;\n\n      ctrl.refresh();\n    };\n\n    ctrlMix.setItems = (items) => {\n      mixState.items = items;\n\n      ctrlMix.setItemsCount(mixState.items.length);\n    };\n\n    ctrlMix.setItemsCount = (itemsCount) => {\n      return mixState.setItemsCount(itemsCount);\n    };\n\n    const templateSetItemsCount = (itemsCount, {afterUpdatingItemsCountHook} = {}) => {\n      checkItemsCountConsistency(mixState.items, itemsCount);\n\n      mixState.itemsCount = itemsCount;\n\n      if (afterUpdatingItemsCountHook) {\n        afterUpdatingItemsCountHook();\n      }\n\n      ctrl.refresh();\n    };\n\n    ctrlMix.refreshWithCurrentRealScrollPosition = () => {\n      // refreshing means updating the rendered items and the virtual scroll position\n      // while trying to keep the current real scroll position\n\n      preserveRealScrollPosition = true;\n\n      if (!ctrl.isScrollVirtualized) {\n        return void mixState.updateNonVirtualized();\n      }\n\n      // it's possible that the content changed and now there's less\n      mixState.realScrollPosition = Math.min(mixState.realScrollPosition, ctrl.realScrollSpace);\n\n      let virtualScrollPosition;\n\n      // it's possible that truncating the virtual scroll position results in extra virtual content\n      if (mixState.realScrollPosition === ctrl.realScrollSpace) {\n        virtualScrollPosition = ctrl.virtualScrollSpace;\n      } else {\n        // the virtual scroll position is computed based on the real scroll position,\n        // but it's possible that the translated real scroll position into the virtual one\n        // is too great and it's important when comparing the result with the current\n        // dom scroll position\n        virtualScrollPosition = Math.min(\n          Math.trunc(mixState.realScrollPosition / ctrl.realVirtualScrollSpaceRatio),\n          ctrl.virtualScrollSpace);\n\n        // when truncating the virtual scroll position it's possible that it becomes 0 even though\n        // there is still some content before\n        if (!virtualScrollPosition && mixState.realScrollPosition > 0) {\n          virtualScrollPosition = 1;\n        }\n      }\n\n      lastPreserveRealScrollVirtualScrollPosition = virtualScrollPosition;\n\n      if (ctrl.containerScrollPosition !== virtualScrollPosition) {\n        // the rendered items will be updated during the next scroll event handling as well\n        isVirtualScrollPositionSetProgramatically = true;\n        mixState.domContainer[ctrl.scrollPositionProp] = virtualScrollPosition;\n      }\n\n      // it's better to always update the items even if the scroll position changes\n      // because if the items changed we don't want to wait for the scroll event\n      mixState.updateRenderedItems();\n    };\n\n    const templateUpdateNonVirtualized = ({afterUpdatingRenderingInfoHook} = {}) => {\n      ctrl.renderedItemsStartIndex = 0;\n      ctrl.renderedItemsCount = mixState.domContainer ? mixState.itemsCount : 0;\n      ctrl.trimmedStartNegativeSize = 0;\n\n      if (afterUpdatingRenderingInfoHook) {\n        afterUpdatingRenderingInfoHook();\n      }\n\n      if (mixState.domContainer) {\n        currentVirtualScrollPosition = ctrl.containerScrollPosition;\n\n        // the list may become non-virtualized without any scroll position change\n        // by changing the content\n        if (preserveRealScrollPosition\n          && ctrl.containerScrollPosition !== mixState.realScrollPosition) {\n          mixState.domContainer[ctrl.scrollPositionProp] = mixState.realScrollPosition;\n        }\n\n        mixState.realScrollPosition = ctrl.containerScrollPosition;\n      } else {\n        mixState.realScrollPosition = 0;\n        currentVirtualScrollPosition = 0;\n      }\n    };\n\n    const setPreservingRealScrollPosition = () => {\n      mixState.realScrollPosition = preserveRealScrollPosition\n        && lastPreserveRealScrollVirtualScrollPosition === ctrl.containerScrollPosition\n          ? mixState.realScrollPosition\n          : ctrl.containerScrollPosition * ctrl.realVirtualScrollSpaceRatio;\n    };\n\n    ctrlMix.onRender = ({afterSizeSyncChecksHook} = {}) => {\n      if (!mixState.domContainer) {\n        throw new Error('DOM container missing');\n      }\n\n      const operationForSizeSync = mixState.lastOperationForSizeSync\n        || mixState.refreshWithCurrentRealScrollPosition;\n      const syncResolutionDefaults = {\n        mustReapplyLastOperationForSizeSync: false,\n        lastOperationForSizeSync: operationForSizeSync\n      };\n\n      if (!isVirtualScrollPositionSetProgramatically) {\n        const wasOrhotogonalOverflow = mixState.prevIsOrthogonalOverflow;\n\n        mixState.prevIsOrthogonalOverflow = ctrl.isOrthogonalOverflow;\n\n        if (ctrl.isVirtualizationEmptySpace\n          || !wasOrhotogonalOverflow && mixState.prevIsOrthogonalOverflow) {\n          return {\n            ...syncResolutionDefaults,\n            mustReapplyLastOperationForSizeSync: true\n          };\n        }\n      }\n\n      if (afterSizeSyncChecksHook) {\n        const hookResult = afterSizeSyncChecksHook(syncResolutionDefaults);\n\n        if (hookResult) {\n          return hookResult;\n        }\n      }\n\n      if (!isVirtualScrollPositionSetProgramatically) {\n        mixState.lastOperationForSizeSync = null;\n        preserveRealScrollPosition = false;\n      }\n\n      return syncResolutionDefaults;\n    };\n\n    ctrlMix.onScroll = () => {\n      const wasVirtualScrollPositionSetProgramatically = isVirtualScrollPositionSetProgramatically;\n\n      isVirtualScrollPositionSetProgramatically = false;\n\n      if (!ctrl.isScrollVirtualized) {\n        return void mixState.updateNonVirtualized();\n      }\n\n      let scrollDif = ctrl.containerScrollPosition - currentVirtualScrollPosition;\n\n      currentVirtualScrollPosition = ctrl.containerScrollPosition;\n\n      if (ctrl.isTranslatedVirtualization\n        && !wasVirtualScrollPositionSetProgramatically\n        && Math.abs(scrollDif) <= maxTranslatedVirtualizationScrollRecomputationDif) {\n        scrollDif = Math.sign(scrollDif)\n          * Math.max(Math.abs(scrollDif), smoothTranslatedVirtualizationScrollDif);\n\n        return void refreshWithRealScrollPosition(mixState.realScrollPosition + scrollDif);\n      }\n\n      mixState.updateRenderedItems();\n    };\n\n    const refreshWithRealScrollPosition = (realScrollPosition_) => {\n      mixState.realScrollPosition = Math.min(\n        Math.max(0, realScrollPosition_),\n        ctrl.realScrollSpace);\n\n      mixState.refreshWithCurrentRealScrollPosition();\n    };\n\n    ctrlMix.scrollIntoView = (index, {ifNeeded, alignEnd, fit} = {}) => {\n      if (!mixState.domContainer) {\n        return;\n      }\n\n      mixState.lastOperationForSizeSync = ctrlMix.scrollIntoView.bind(\n        null,\n        index,\n        {ifNeeded, alignEnd, fit});\n\n      refreshWithRealScrollPosition(getStartScrollPositionForIndex(\n        index,\n        {ifNeeded, alignEnd, fit}));\n    };\n\n    const getStartScrollPositionForIndex = (index, {ifNeeded, alignEnd, fit} = {}) => {\n      // fit means that if the desired scroll position is after the viewport, the result\n      // will be aligned to the end and if it's before the viewport, the result\n      // will be aligned to the start.\n\n      index = Math.max(Math.min(index, mixState.itemsCount - 1), 0);\n\n      const realIndexScrollPosition = mixState.getRealItemPosition(index);\n      const realIndexEndAlignedScrollTop = Math.max(\n        0,\n        realIndexScrollPosition - ctrl.containerClientSize + ctrl.getRealItemSize(index));\n\n      if (ifNeeded || fit) {\n        if (realIndexScrollPosition >= mixState.realScrollPosition\n          && mixState.realScrollPosition >= realIndexEndAlignedScrollTop) {\n          return mixState.realScrollPosition;\n        }\n\n        if (fit && Math.abs(mixState.realScrollPosition - realIndexEndAlignedScrollTop)\n          < Math.abs(mixState.realScrollPosition - realIndexScrollPosition)) {\n          return realIndexEndAlignedScrollTop;\n        }\n      }\n\n      if (alignEnd) {\n        return realIndexEndAlignedScrollTop;\n      }\n\n      return realIndexScrollPosition;\n    };\n\n    ctrlMix.scrollToFit = (index) => ctrlMix.scrollIntoView(index, {fit: true});\n\n    ctrlMix.scrollTo = (scrollPosition) => {\n      if (!mixState.domContainer) {\n        return;\n      }\n\n      mixState.lastOperationForSizeSync = mixState.refreshWithCurrentRealScrollPosition;\n\n      refreshWithRealScrollPosition(scrollPosition * ctrl.realVirtualScrollSpaceRatio);\n    };\n\n    return ctrlMix;\n  });\n\n  renderClip1DMixin.getContext = getContext;\n  renderClip1DMixin.getState = getState;\n\n  const moduleExports = renderClip1DMixin;\n\n  if (isModule) {\n    module.exports = moduleExports;\n  } else {\n    window.crizmas = window.crizmas || {};\n    window.crizmas.renderClip1DMixin = moduleExports;\n  }\n})();\n","(() => {\n  'use strict';\n\n  const isModule = typeof module === 'object' && typeof module.exports === 'object';\n\n  let mixin;\n\n  if (isModule) {\n    mixin = require('smart-mix');\n  } else {\n    ({mixin} = window);\n  }\n\n  const getExtraContext = (ctrl, mixState) => ({\n    get realTotalItemsSize() {\n      return mixState.itemsCount * mixState.realItemSize;\n    },\n\n    get isVirtualizationEmptySpace() {\n      return ctrl.isScrollVirtualized\n        && ctrl.renderedItemsCount * mixState.realItemSize + ctrl.trimmedStartNegativeSize\n          < ctrl.containerClientSize;\n    }\n  });\n\n  const getExtraState = () => ({\n    realItemSize: 0\n  });\n\n  const renderClipSameSize1DMixin = mixin((ctrl, mixState) => {\n    const ctrlMix = {};\n\n    ctrlMix.getRealItemSize = () => mixState.realItemSize;\n\n    ctrlMix.init = ({\n      itemHeight,\n      itemWidth\n    }) => {\n      if (!itemHeight && !itemWidth) {\n        throw new Error('Either itemHeight or itemWidth must be provided.');\n      }\n\n      mixState.realItemSize = itemHeight || itemWidth;\n      mixState.setItemsCount = mixState.templateSetItemsCount;\n      mixState.getRealItemPosition = getRealItemPosition;\n      mixState.updateNonVirtualized = mixState.templateUpdateNonVirtualized;\n      mixState.updateRenderedItems = updateRenderedItems;\n    };\n\n    const getRealItemPosition = (index) => index * mixState.realItemSize;\n\n    const updateRenderedItems = () => {\n      mixState.setPreservingRealScrollPosition();\n\n      const realBeforeViewportWholeItemsCount =\n        getWholeRealItemsCountInSpace(mixState.realScrollPosition);\n      const realAfterViewportWholeItemsCount = getWholeRealItemsCountInSpace(\n        ctrl.realTotalItemsSize - mixState.realScrollPosition - ctrl.containerClientSize);\n      // can include partially visible items\n      const realViewportItemsCount = mixState.itemsCount - realBeforeViewportWholeItemsCount\n        - realAfterViewportWholeItemsCount;\n      const realBeforeViewportWholeItemsSize = realBeforeViewportWholeItemsCount\n        * mixState.realItemSize;\n      const realStartTrimmedSize = mixState.realScrollPosition - realBeforeViewportWholeItemsSize;\n\n      ctrl.renderedItemsStartIndex = realBeforeViewportWholeItemsCount;\n      ctrl.renderedItemsCount = realViewportItemsCount;\n      ctrl.trimmedStartNegativeSize = -realStartTrimmedSize;\n    };\n\n    const getWholeRealItemsCountInSpace = (space) => {\n      return Math.trunc(space / mixState.realItemSize);\n    };\n\n    return ctrlMix;\n  });\n\n  renderClipSameSize1DMixin.getContext = getExtraContext;\n  renderClipSameSize1DMixin.getState = getExtraState;\n\n  const moduleExports = renderClipSameSize1DMixin;\n\n  if (isModule) {\n    module.exports = moduleExports;\n  } else {\n    window.crizmas = window.crizmas || {};\n    window.crizmas.renderClipSameSize1DMixin = moduleExports;\n  }\n})();\n","(() => {\n  'use strict';\n\n  const isModule = typeof module === 'object' && typeof module.exports === 'object';\n\n  let mixin;\n\n  if (isModule) {\n    mixin = require('smart-mix');\n  } else {\n    ({mixin} = window);\n  }\n\n  const getExtraContext = (ctrl, mixState) => ({\n    realTotalItemsSize: 0,\n\n    get isVirtualizationEmptySpace() {\n      return ctrl.isScrollVirtualized\n        && mixState.totalRenderedItemsSize + ctrl.trimmedStartNegativeSize\n          < ctrl.containerClientSize;\n    }\n  });\n\n  const getExtraState = () => ({\n    totalRenderedItemsSize: 0\n  });\n\n  const renderClipIndividualSize1DMixin = mixin((ctrl, mixState) => {\n    let itemsPositions = null;\n    const ctrlMix = {};\n\n    ctrlMix.init = ({\n      itemHeight,\n      itemWidth\n    }) => {\n      if (!itemHeight && !itemWidth) {\n        throw new Error('Either itemHeight or itemWidth must be provided.');\n      }\n\n      mixState.setItemsCount = setItemsCount;\n      mixState.getRealItemPosition = getRealItemPosition;\n      mixState.updateNonVirtualized = updateNonVirtualized;\n      mixState.updateRenderedItems = updateRenderedItems;\n\n      setRealTotalItemsSize();\n    };\n\n    ctrlMix.getGetRealItemSizeDefinition = (itemHeight, itemWidth) => ctrl.isVertical\n      ? (index) => itemHeight(index, mixState.items && mixState.items[index])\n      : (index) => itemWidth(index, mixState.items && mixState.items[index]);\n\n    const setItemsCount = (itemsCount) => mixState.templateSetItemsCount(itemsCount, {\n      afterUpdatingItemsCountHook: () => {\n        setRealTotalItemsSize();\n      }\n    });\n\n    const getRealItemPosition = (index) => itemsPositions[index];\n\n    const setRealTotalItemsSize = () => {\n      itemsPositions = Array(mixState.itemsCount + 1);\n      ctrl.realTotalItemsSize = getRealTotalItemsSizeAndPositions();\n    };\n\n    const getRealTotalItemsSizeAndPositions = () => {\n      let space = 0;\n      let {itemsCount} = mixState;\n\n      for (let i = 0; i < itemsCount; i += 1) {\n        itemsPositions[i] = space;\n        space += ctrl.getRealItemSize(i);\n      }\n\n      itemsPositions[itemsCount] = space;\n\n      return space;\n    };\n\n    const updateNonVirtualized = () => mixState.templateUpdateNonVirtualized({\n      afterUpdatingRenderingInfoHook: () => {\n        mixState.totalRenderedItemsSize = mixState.domContainer ? ctrl.realTotalItemsSize : 0;\n      }\n    });\n\n    const updateRenderedItems = () => {\n      mixState.setPreservingRealScrollPosition();\n\n      const {\n        lastItemIndexInSpace: firstRenderedItemIndex,\n        lastItemIndexInSpacePosition: renderedItemsSpaceStart\n      } = getLastItemInSpaceInfo(mixState.realScrollPosition);\n      const {\n        spaceEndFromLastIndexBeforePosition: renderedItemsSpaceEnd,\n        fromPositionClosestIndex: renderedItemsFromEndClosestIndex\n      } = getLastItemInSpaceInfo(mixState.realScrollPosition + ctrl.containerClientSize);\n      const realStartTrimmedSize = mixState.realScrollPosition - renderedItemsSpaceStart;\n\n      ctrl.renderedItemsStartIndex = firstRenderedItemIndex;\n      // can include partially visible items\n      ctrl.renderedItemsCount = renderedItemsFromEndClosestIndex - firstRenderedItemIndex;\n      ctrl.trimmedStartNegativeSize = -realStartTrimmedSize;\n      mixState.totalRenderedItemsSize = renderedItemsSpaceEnd - renderedItemsSpaceStart;\n    };\n\n    const getLastItemInSpaceInfo = (position) => {\n      // due to the number type it's possible that the calculated position exceeds the limit\n      position = Math.min(position, ctrl.realTotalItemsSize);\n\n      let lastItemIndexInSpace;\n\n      if (itemsPositions[0] === position) {\n        lastItemIndexInSpace = 0;\n      } else {\n        const lastIndex = mixState.itemsCount;\n\n        if (itemsPositions[lastIndex] === position) {\n          lastItemIndexInSpace = lastIndex;\n        } else {\n          lastItemIndexInSpace = searchClosestFromBeforeIndex(position, 0, lastIndex);\n        }\n      }\n\n      const lastItemIndexInSpacePosition = itemsPositions[lastItemIndexInSpace];\n      const positionReached = lastItemIndexInSpacePosition === position;\n      const fromPositionClosestIndex = positionReached\n        ? lastItemIndexInSpace\n        : lastItemIndexInSpace + 1;\n      const spaceEndFromLastIndexBeforePosition = positionReached\n        ? lastItemIndexInSpacePosition\n        : lastItemIndexInSpacePosition + ctrl.getRealItemSize(lastItemIndexInSpace);\n\n      return {\n        lastItemIndexInSpace,\n        lastItemIndexInSpacePosition,\n        fromPositionClosestIndex,\n        spaceEndFromLastIndexBeforePosition\n      };\n    };\n\n    const searchClosestFromBeforeIndex = (position, fromIndex, lastIndex) => {\n      if (lastIndex - fromIndex === 1) {\n        const lastIndexPosition = itemsPositions[lastIndex];\n\n        if (lastIndexPosition < position) {\n          return lastIndex;\n        }\n\n        return fromIndex;\n      }\n\n      const midIndex = Math.floor((fromIndex + lastIndex) / 2);\n      const midIndexPosition = itemsPositions[midIndex];\n\n      if (midIndexPosition === position) {\n        return midIndex;\n      }\n\n      if (midIndexPosition < position) {\n        return searchClosestFromBeforeIndex(position, midIndex, lastIndex);\n      }\n\n      return searchClosestFromBeforeIndex(position, fromIndex, midIndex);\n    };\n\n    return ctrlMix;\n  });\n\n  renderClipIndividualSize1DMixin.getContext = getExtraContext;\n  renderClipIndividualSize1DMixin.getState = getExtraState;\n\n  const moduleExports = renderClipIndividualSize1DMixin;\n\n  if (isModule) {\n    module.exports = moduleExports;\n  } else {\n    window.crizmas = window.crizmas || {};\n    window.crizmas.renderClipIndividualSize1DMixin = moduleExports;\n  }\n})();\n","(() => {\n  'use strict';\n\n  const isModule = typeof module === 'object' && typeof module.exports === 'object';\n\n  let Mvc;\n  let RenderClip1DController;\n\n  if (isModule) {\n    Mvc = require('crizmas-mvc');\n    RenderClip1DController = require('./render-clip-1d');\n  } else {\n    ({Mvc, RenderClip1DController} = window.crizmas);\n  }\n\n  const RenderClip2DController = Mvc.controller(function RenderClip2DController({\n    verticalItemsCount = 0,\n    horizontalItemsCount = 0,\n    itemHeight,\n    itemWidth\n  } = {}) {\n    const ctrl = {\n      verticalRenderClipController: new RenderClip1DController({\n        itemsCount: verticalItemsCount,\n        itemHeight\n      }),\n      horizontalRenderClipController: new RenderClip1DController({\n        itemsCount: horizontalItemsCount,\n        itemWidth\n      })\n    };\n\n    ctrl.setDomContainer = (domContainer) => {\n      ctrl.verticalRenderClipController.setDomContainer(domContainer);\n      ctrl.horizontalRenderClipController.setDomContainer(domContainer);\n    };\n\n    ctrl.setItemsCount = ({verticalItemsCount, horizontalItemsCount}) => {\n      ctrl.verticalRenderClipController.setItemsCount(verticalItemsCount);\n      ctrl.horizontalRenderClipController.setItemsCount(horizontalItemsCount);\n    };\n\n    ctrl.refresh = () => {\n      ctrl.verticalRenderClipController.refresh();\n      ctrl.horizontalRenderClipController.refresh();\n    };\n\n    ctrl.onScroll = () => {\n      ctrl.verticalRenderClipController.onScroll();\n      ctrl.horizontalRenderClipController.onScroll();\n    };\n\n    return ctrl;\n  });\n\n  const moduleExports = RenderClip2DController;\n\n  if (isModule) {\n    module.exports = moduleExports;\n  } else {\n    window.crizmas = window.crizmas || {};\n    window.crizmas.RenderClip2DController = moduleExports;\n  }\n})();\n","// this is used as part of a 2d controller\n\n(() => {\n  'use strict';\n\n  const isModule = typeof module === 'object' && typeof module.exports === 'object';\n\n  let Mvc;\n  let getRenderClip1DDefinition;\n\n  if (isModule) {\n    Mvc = require('crizmas-mvc');\n    getRenderClip1DDefinition = require('./render-clip-1d-definition');\n  } else {\n    ({Mvc, getRenderClip1DDefinition} = window.crizmas);\n  }\n\n  const RenderClip1D = Mvc.controller(function RenderClip1D({\n    items,\n    itemsCount,\n    itemHeight,\n    itemWidth\n  } = {}) {\n    const definition = getRenderClip1DDefinition({\n      items,\n      itemsCount,\n      itemHeight,\n      itemWidth\n    });\n    const {ctrl, ctrlMixState, ctrlMix} = definition;\n\n    ctrl.refresh = ctrlMixState.refreshWithCurrentRealScrollPosition;\n\n    ctrl.onRender = Mvc.ignore(ctrlMix.onRender);\n\n    definition.init();\n\n    return ctrl;\n  });\n\n  const moduleExports = RenderClip1D;\n\n  if (isModule) {\n    module.exports = moduleExports;\n  } else {\n    window.crizmas = window.crizmas || {};\n    window.crizmas.RenderClip1DController = moduleExports;\n  }\n})();\n","(() => {\n  'use strict';\n\n  const isModule = typeof module === 'object' && typeof module.exports === 'object';\n\n  let Mvc;\n  let RenderClipController;\n\n  if (isModule) {\n    Mvc = require('crizmas-mvc');\n    RenderClipController = require('./render-clip/render-clip');\n  } else {\n    ({Mvc, RenderClipController} = window.crizmas);\n  }\n\n  const TreeController = Mvc.controller(function TreeController({nodes: nodes_, itemHeight}) {\n    // the nodes are a tree of objects with optional children and isExpanded properties\n    // and any other possible properties\n\n    let nodes = nodes_;\n    let tree;\n    let treeArray;\n    const ctrl = {\n      renderClipController: new RenderClipController({itemHeight}),\n\n      get treeArray() {\n        return treeArray;\n      }\n    };\n\n    const init = () => {\n      initTreeItems();\n      initTreeArray();\n    };\n\n    const initTreeItems = () => {\n      tree = getTreeNodes(nodes, 0);\n    };\n\n    const getTreeNodes = (nodes, level) => {\n      const childrenLevel = level + 1;\n\n      return nodes.map((node) => ({\n        data: node,\n        level,\n        isExpanded: !!node.children && !!node.isExpanded,\n        children: node.children\n          ? getTreeNodes(node.children, childrenLevel)\n          : null\n      }));\n    };\n\n    const initTreeArray = () => {\n      treeArray = getTreeArray(tree);\n\n      ctrl.renderClipController.setItemsCount(treeArray.length);\n    };\n\n    const getTreeArray = (treeNodes, treeArray = []) => {\n      treeNodes.forEach((treeNode) => {\n        treeArray.push(treeNode);\n\n        if (treeNode.isExpanded) {\n          getTreeArray(treeNode.children, treeArray);\n        }\n      });\n\n      return treeArray;\n    };\n\n    ctrl.setNodes = (nodes_) => {\n      nodes = nodes_;\n\n      init();\n    };\n\n    ctrl.refresh = () => {\n      ctrl.renderClipController.refresh();\n    };\n\n    ctrl.toggleExpand = (treeNode) => {\n      const treeNodeIndex = treeArray.indexOf(treeNode);\n\n      treeNode.isExpanded = !treeNode.isExpanded;\n\n      if (treeNode.isExpanded) {\n        const nodeSubtreeArray = getTreeArray(treeNode.children);\n        const prevArray = treeArray.slice(0, treeNodeIndex + 1);\n        const afterArray = treeArray.slice(treeNodeIndex + 1);\n\n        treeArray = [\n          ...prevArray,\n          ...nodeSubtreeArray,\n          ...afterArray\n        ];\n      } else {\n        const nodeSubtreeLength = getSubTreeNodeLength(treeNode);\n\n        treeArray.splice(treeNodeIndex + 1, nodeSubtreeLength);\n      }\n\n      ctrl.renderClipController.setItemsCount(treeArray.length);\n    };\n\n    const getSubTreeNodeLength = (treeNode) => {\n      return treeNode.children\n        ? treeNode.children.reduce(\n          (sum, childTreeNode) => sum + 1\n            + (childTreeNode.isExpanded ? getSubTreeNodeLength(childTreeNode) : 0),\n          0)\n        : 0;\n    };\n\n    init();\n\n    return ctrl;\n  });\n\n  const moduleExports = TreeController;\n\n  if (isModule) {\n    module.exports = moduleExports;\n  } else {\n    window.crizmas = window.crizmas || {};\n    window.crizmas.TreeController = moduleExports;\n  }\n})();\n"],"sourceRoot":""}