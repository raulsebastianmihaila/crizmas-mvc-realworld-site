{"version":3,"sources":["webpack:///./src/js/pages/register/register.js","webpack:///./src/js/pages/register/register-controller.js"],"names":["Register","Component","constructor","super","this","onSubmit","e","preventDefault","props","controller","form","submit","render","serverErrors","isPending","className","to","map","error","i","key","inputClassName","type","placeholder","disabled","get","propTypes","PropTypes","object","isRequired","Mvc","ctrl","userController","currentUser","isAuthenticated","router","transitionTo","init","Form","children","name","validate","validation","required","usernameValidator","passwordValidator","actions","register","getResult","onFormChange","username","email","password","then"],"mappings":"0YAKe,MAAMA,UAAiBC,YACpCC,cACEC,QAEAC,KAAKC,SAAYC,IACfA,EAAEC,iBACFH,KAAKI,MAAMC,WAAWC,KAAKC,UAI/BC,SACE,MAAM,KAACF,EAAD,aAAOG,EAAP,UAAqBC,GAAaV,KAAKI,MAAMC,WAEnD,OAAO,yBAAKM,UAAU,aACpB,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,kCACb,wBAAIA,UAAU,kBAAd,WACA,uBAAGA,UAAU,kBACX,kBAAC,OAAD,CAAMC,GAAG,UAAT,qBAGDH,GAAgB,wBAAIE,UAAU,kBAC5BF,EAAaI,IAAI,CAACC,EAAOC,IAAM,wBAAIC,IAAKD,GAAID,KAG/C,0BAAMb,SAAUD,KAAKC,UACnB,8BAAUU,UAAU,cAClB,kBAAC,QAAD,GACEM,eAAe,+BACfC,KAAK,OACLC,YAAY,YACZC,SAAUV,GACNJ,EAAKe,IAAI,eAEjB,8BAAUV,UAAU,cAClB,kBAAC,QAAD,GACEM,eAAe,+BACfC,KAAK,QACLC,YAAY,QACZC,SAAUV,GACNJ,EAAKe,IAAI,YAEjB,8BAAUV,UAAU,cAClB,kBAAC,QAAD,GACEM,eAAe,+BACfC,KAAK,WACLC,YAAY,WACZC,SAAUV,GACNJ,EAAKe,IAAI,eAEjB,4BACEV,UAAU,uCACVS,SAAUV,GAFZ,iBAWdd,EAAS0B,UAAY,CACnBjB,WAAYkB,IAAUC,OAAOC,a,gCCpE/B,kEAOeC,cAAIrB,YAAW,WAC5B,MAAMsB,EAAO,CACXC,mBACAtB,KAAM,KACNG,aAAc,KAGhBkB,QAAe,KACb,GAAIE,IAAYC,gBAGd,OAFAC,IAAOC,aAAa,MAEb,EAGTC,MAGIA,EAAO,KACXN,EAAKrB,KAAO,IAAI4B,IAAK,CACnBC,SAAU,CACR,CACEC,KAAM,WACNC,SAAUC,qBAAWA,aAAWC,WAAYC,MAE9C,CACEJ,KAAM,QACNC,SAAUC,aAAWC,YAEvB,CACEH,KAAM,WACNC,SAAUC,qBAAWA,aAAWC,WAAYE,OAIhDC,QAAS,CACPnC,OAAQ,KACNoB,EAAKgB,SAAShB,EAAKrB,KAAKsC,eAI5BC,aAAc,KACZlB,EAAKlB,aAAe,SAmB1B,OAdAkB,EAAKgB,SAAW,EAAEG,WAAUC,QAAOC,eACjCrB,EAAKlB,aAAe,KAEbmB,IAAee,SAAS,CAACG,WAAUC,QAAOC,aAAWC,KAC1D,KACElB,IAAOC,aAAa,MAGrBvB,IACCkB,EAAKlB,aAAeA,KAKnBkB","file":"register.bundle-4a2eb1e367b178f6053f.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'crizmas-router';\nimport {Input} from 'crizmas-components';\n\nexport default class Register extends Component {\n  constructor() {\n    super();\n\n    this.onSubmit = (e) => {\n      e.preventDefault();\n      this.props.controller.form.submit();\n    };\n  }\n\n  render() {\n    const {form, serverErrors, isPending} = this.props.controller;\n\n    return <div className=\"auth-page\">\n      <div className=\"container page\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3 col-xs-12\">\n            <h1 className=\"text-xs-center\">Sign up</h1>\n            <p className=\"text-xs-center\">\n              <Link to=\"/login\">Have an account?</Link>\n            </p>\n\n            {serverErrors && <ul className=\"error-messages\">\n              {serverErrors.map((error, i) => <li key={i}>{error}</li>)}\n            </ul>}\n\n            <form onSubmit={this.onSubmit}>\n              <fieldset className=\"form-group\">\n                <Input\n                  inputClassName=\"form-control form-control-lg\"\n                  type=\"text\"\n                  placeholder=\"Your Name\"\n                  disabled={isPending}\n                  {...form.get('username')} />\n              </fieldset>\n              <fieldset className=\"form-group\">\n                <Input\n                  inputClassName=\"form-control form-control-lg\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  disabled={isPending}\n                  {...form.get('email')} />\n              </fieldset>\n              <fieldset className=\"form-group\">\n                <Input\n                  inputClassName=\"form-control form-control-lg\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  disabled={isPending}\n                  {...form.get('password')} />\n              </fieldset>\n              <button\n                className=\"btn btn-lg btn-primary pull-xs-right\"\n                disabled={isPending}>Sign up</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>;\n  }\n}\n\nRegister.propTypes = {\n  controller: PropTypes.object.isRequired\n};\n","import Mvc from 'crizmas-mvc';\nimport Form, {validation} from 'crizmas-form';\n\nimport router from '../../router';\nimport {currentUser} from '../../models/user';\nimport userController, {usernameValidator, passwordValidator} from '../../controllers/user';\n\nexport default Mvc.controller(function RegisterController() {\n  const ctrl = {\n    userController,\n    form: null,\n    serverErrors: null\n  };\n\n  ctrl.onEnter = () => {\n    if (currentUser.isAuthenticated) {\n      router.transitionTo('/');\n\n      return false;\n    }\n\n    init();\n  };\n\n  const init = () => {\n    ctrl.form = new Form({\n      children: [\n        {\n          name: 'username',\n          validate: validation(validation.required(), usernameValidator)\n        },\n        {\n          name: 'email',\n          validate: validation.required()\n        },\n        {\n          name: 'password',\n          validate: validation(validation.required(), passwordValidator)\n        }\n      ],\n\n      actions: {\n        submit: () => {\n          ctrl.register(ctrl.form.getResult());\n        }\n      },\n\n      onFormChange: () => {\n        ctrl.serverErrors = null;\n      }\n    });\n  };\n\n  ctrl.register = ({username, email, password}) => {\n    ctrl.serverErrors = null;\n\n    return userController.register({username, email, password}).then(\n      () => {\n        router.transitionTo('/');\n      },\n\n      (serverErrors) => {\n        ctrl.serverErrors = serverErrors;\n      }\n    );\n  };\n\n  return ctrl;\n});\n"],"sourceRoot":""}