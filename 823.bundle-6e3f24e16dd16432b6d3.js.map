{"version":3,"file":"823.bundle-6e3f24e16dd16432b6d3.js","mappings":"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","sources":["webpack:///./src/js/api/article.js","webpack:///./src/js/components/article-author.js","webpack:///./src/js/components/tag-list.js","webpack:///./src/js/controllers/article.js","webpack:///./src/js/date-utils.js","webpack:///./src/js/models/article.js"],"sourcesContent":["import {get, post, put, del} from '../http';\nimport {toJson, getResponseErrors} from './utils';\n\nconst normalizeDates = (obj) => {\n  obj.createdAt = new Date(obj.createdAt);\n  obj.updatedAt = new Date(obj.updatedAt);\n};\n\nconst handleArticlesResult = (result) => {\n  result.articles.forEach(normalizeDates);\n\n  return result;\n};\n\nexport const getGlobalFeed = ({offset, limit}) => {\n  return get('articles', {offset, limit})\n    .then(toJson)\n    .then(handleArticlesResult);\n};\n\nexport const getOwnFeed = ({offset, limit}) => {\n  return get('articles/feed', {offset, limit})\n    .then(toJson)\n    .then(handleArticlesResult);\n};\n\nexport const getTagFeed = ({tag, offset, limit}) => {\n  return get('articles', {tag, offset, limit})\n    .then(toJson)\n    .then(handleArticlesResult);\n};\n\nexport const getOwnArticles = ({author, limit, offset}) => {\n  return get('articles', {author, offset, limit})\n    .then(toJson)\n    .then(handleArticlesResult);\n};\n\nexport const getFavoriteArticles = ({favorited, limit, offset}) => {\n  return get('articles', {favorited, offset, limit})\n    .then(toJson)\n    .then(handleArticlesResult);\n};\n\nexport const getArticle = ({slug}) => {\n  return get(`articles/${encodeURIComponent(slug)}`)\n    .then(toJson)\n    .then(({article}) => {\n      normalizeDates(article);\n\n      return {article};\n    });\n};\n\nexport const saveArticle = ({title, description, body, tagList}) => {\n  return post('articles', {\n    article: {\n      title,\n      description,\n      body,\n      tagList\n    }\n  }).then(toJson, getResponseErrors);\n};\n\nexport const updateArticle = ({slug, title, description, body, tagList}) => {\n  return put(`articles/${encodeURIComponent(slug)}`, {\n    article: {\n      title,\n      description,\n      body,\n      tagList\n    }\n  }).then(toJson, getResponseErrors);\n};\n\nexport const setFavorite = ({slug, isFavorite}) => {\n  const httpFunc = isFavorite ? post : del;\n\n  return httpFunc(`articles/${slug}/favorite`).then(toJson);\n};\n\nexport const getArticleComments = ({slug}) => {\n  return get(`articles/${encodeURIComponent(slug)}/comments`)\n    .then(toJson)\n    .then(({comments}) => {\n      comments.forEach(normalizeDates);\n\n      return {comments};\n    });\n};\n\nexport const deleteArticle = ({slug}) => {\n  return del(`articles/${encodeURIComponent(slug)}`);\n};\n\nexport const postComment = ({slug, comment}) => {\n  return post(`articles/${encodeURIComponent(slug)}/comments`, {\n    comment: {body: comment}\n  }).then(toJson).then(({comment}) => {\n    normalizeDates(comment);\n\n    return {comment};\n  });\n};\n\nexport const deleteComment = ({slug, commentId}) => {\n  return del(`articles/${encodeURIComponent(slug)}/comments/${commentId}`);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'crizmas-router';\n\nimport {longDate} from '../date-utils';\n\nconst ArticleAuthor = ({article}) => <span>\n  <Link to={`/@${encodeURIComponent(article.author.username)}`}>\n    <img src={article.author.image} />&nbsp;\n  </Link>\n  <div className=\"info\">\n    <Link\n      to={`/@${encodeURIComponent(article.author.username)}`}\n      className=\"author\">{article.author.username}</Link>\n    <span className=\"date\">{longDate(article.createdAt)}</span>\n  </div>\n</span>;\n\nArticleAuthor.propTypes = {\n  article: PropTypes.object.isRequired\n};\n\nexport default ArticleAuthor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TagList = ({article}) => !!article.tagList.length && <ul className=\"tag-list\">\n  {article.tagList.map((tag, i) => <li\n    key={i}\n    className=\"tag-default tag-pill tag-outline\">\n    {tag}\n  </li>)}\n</ul>;\n\nTagList.propTypes = {\n  article: PropTypes.object.isRequired\n};\n\nexport default TagList;\n","import {controller} from 'crizmas-mvc';\n\nimport {currentUser} from '../models/user';\nimport * as articleApi from '../api/article';\nimport router from '../router';\n\nexport default controller({\n  setFavorite: (article) => {\n    if (!currentUser.isAuthenticated) {\n      router.transitionTo('/register');\n\n      return Promise.reject(new Error('The user is not authenticated'));\n    }\n\n    return articleApi.setFavorite({slug: article.slug, isFavorite: !article.favorited})\n      .then((result) => {\n        article.setFavorite(result.article);\n      });\n  }\n});\n","const longFormat = new Intl.DateTimeFormat('en-US', {\n  month: 'short',\n  day: 'numeric',\n  year: 'numeric'\n});\n\nexport const longDate = (date) => longFormat.format(date);\n","import {User} from './user';\n\nexport function Article(articleData) {\n  const article = {\n    title: articleData.title,\n    author: new User(articleData.author),\n    description: articleData.description,\n    body: articleData.body,\n    slug: articleData.slug,\n    createdAt: articleData.createdAt,\n    updatedAt: articleData.updatedAt,\n    favorited: articleData.favorited,\n    favoritesCount: articleData.favoritesCount,\n    tagList: articleData.tagList,\n    comments: null\n  };\n\n  article.setFavorite = ({favorited, favoritesCount}) => {\n    article.favorited = favorited;\n    article.favoritesCount = favoritesCount;\n  };\n\n  article.setComments = (comments) => {\n    article.comments = comments;\n  };\n\n  article.addComment = (comment) => {\n    article.comments.unshift(comment);\n  };\n\n  article.deleteComment = (commentId) => {\n    const index = article.comments.findIndex((comment) => comment.id === commentId);\n\n    if (index !== -1) {\n      article.comments.splice(index, 1);\n    }\n  };\n\n  return article;\n}\n"],"names":["normalizeDates","obj","createdAt","Date","updatedAt","handleArticlesResult","result","articles","forEach","getGlobalFeed","offset","limit","get","then","toJson","getOwnFeed","getTagFeed","tag","getOwnArticles","author","getFavoriteArticles","favorited","getArticle","slug","encodeURIComponent","article","saveArticle","title","description","body","tagList","post","getResponseErrors","updateArticle","put","setFavorite","isFavorite","del","getArticleComments","comments","deleteArticle","postComment","comment","deleteComment","commentId","ArticleAuthor","to","username","src","image","className","longDate","propTypes","PropTypes","TagList","length","map","i","key","controller","currentUser","articleApi","router","Promise","reject","Error","longFormat","Intl","DateTimeFormat","month","day","year","date","format","Article","articleData","User","favoritesCount","unshift","index","findIndex","id","splice"],"sourceRoot":""}