{"version":3,"file":"register.bundle-476218d7451dd2470e80.js","mappings":"yKAOA,SAAeA,EAAAA,EAAAA,KAAW,WACxB,MAAMC,EAAO,CACXC,eADW,KAEXC,KAAM,KACNC,aAAc,KAGhBH,QAAe,KACb,GAAII,EAAAA,EAAAA,gBAGF,OAFAC,EAAAA,EAAAA,aAAoB,MAEb,EAGTC,MAGIA,EAAO,KACXN,EAAKE,KAAO,IAAIK,EAAAA,EAAK,CACnBC,SAAU,CACR,CACEC,KAAM,WACNC,UAAUC,EAAAA,EAAAA,KAAWC,EAAAA,EAAAA,OAAYC,EAAAA,EAAAA,QAEnC,CACEJ,KAAM,QACNC,UAAUE,EAAAA,EAAAA,OAEZ,CACEH,KAAM,WACNC,UAAUC,EAAAA,EAAAA,KAAWC,EAAAA,EAAAA,OAAYE,EAAAA,EAAAA,SAIrCC,QAAS,CACPC,OAAQ,KACNhB,EAAKiB,SAASjB,EAAKE,KAAKgB,eAI5BC,aAAc,KACZnB,EAAKG,aAAe,SAmB1B,OAdAH,EAAKiB,SAAW,EAAEG,SAAAA,EAAUC,MAAAA,EAAOC,SAAAA,MACjCtB,EAAKG,aAAe,KAEbF,EAAAA,GAAAA,SAAwB,CAACmB,SAAAA,EAAUC,MAAAA,EAAOC,SAAAA,IAAWC,MAC1D,KACElB,EAAAA,EAAAA,aAAoB,QAGrBF,IACCH,EAAKG,aAAeA,MAKnBH,M,qTC9DM,MAAMwB,UAAiBC,EAAAA,UACpCC,cACEC,QAEAC,KAAKC,SAAYC,IACfA,EAAEC,iBACFH,KAAKI,MAAMjC,WAAWG,KAAKc,UAI/BiB,SACE,MAAM,KAAC/B,EAAD,aAAOC,EAAP,UAAqB+B,GAAaN,KAAKI,MAAMjC,WAEnD,OAAO,uBAAKoC,UAAU,aACpB,uBAAKA,UAAU,kBACb,uBAAKA,UAAU,OACb,uBAAKA,UAAU,kCACb,sBAAIA,UAAU,kBAAd,WACA,qBAAGA,UAAU,kBACX,gBAAC,IAAD,CAAMC,GAAG,UAAT,qBAGDjC,GAAgB,sBAAIgC,UAAU,kBAC5BhC,EAAakC,KAAI,CAACC,EAAOC,IAAM,sBAAIC,IAAKD,GAAID,MAG/C,wBAAMT,SAAUD,KAAKC,UACnB,4BAAUM,UAAU,cAClB,gBAAC,IAAD,GACEM,eAAe,+BACfC,KAAK,OACLC,YAAY,YACZC,SAAUV,GACNhC,EAAK2C,IAAI,eAEjB,4BAAUV,UAAU,cAClB,gBAAC,IAAD,GACEM,eAAe,+BACfC,KAAK,QACLC,YAAY,QACZC,SAAUV,GACNhC,EAAK2C,IAAI,YAEjB,4BAAUV,UAAU,cAClB,gBAAC,IAAD,GACEM,eAAe,+BACfC,KAAK,WACLC,YAAY,WACZC,SAAUV,GACNhC,EAAK2C,IAAI,eAEjB,0BACEV,UAAU,uCACVS,SAAUV,GAFZ,iBAWdV,EAASsB,UAAY,CACnB/C,WAAYgD,IAAAA,OAAAA","sources":["webpack:///./src/js/pages/register/register-controller.js","webpack:///./src/js/pages/register/register.js"],"sourcesContent":["import {controller} from 'crizmas-mvc';\nimport Form, {validation, required} from 'crizmas-form';\n\nimport router from '../../router';\nimport {currentUser} from '../../models/user';\nimport userController, {getUsernameValidator, getPasswordValidator} from '../../controllers/user';\n\nexport default controller(function RegisterController() {\n  const ctrl = {\n    userController,\n    form: null,\n    serverErrors: null\n  };\n\n  ctrl.onEnter = () => {\n    if (currentUser.isAuthenticated) {\n      router.transitionTo('/');\n\n      return false;\n    }\n\n    init();\n  };\n\n  const init = () => {\n    ctrl.form = new Form({\n      children: [\n        {\n          name: 'username',\n          validate: validation(required(), getUsernameValidator())\n        },\n        {\n          name: 'email',\n          validate: required()\n        },\n        {\n          name: 'password',\n          validate: validation(required(), getPasswordValidator())\n        }\n      ],\n\n      actions: {\n        submit: () => {\n          ctrl.register(ctrl.form.getResult());\n        }\n      },\n\n      onFormChange: () => {\n        ctrl.serverErrors = null;\n      }\n    });\n  };\n\n  ctrl.register = ({username, email, password}) => {\n    ctrl.serverErrors = null;\n\n    return userController.register({username, email, password}).then(\n      () => {\n        router.transitionTo('/');\n      },\n\n      (serverErrors) => {\n        ctrl.serverErrors = serverErrors;\n      }\n    );\n  };\n\n  return ctrl;\n});\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'crizmas-router';\nimport {Input} from 'crizmas-components';\n\nexport default class Register extends Component {\n  constructor() {\n    super();\n\n    this.onSubmit = (e) => {\n      e.preventDefault();\n      this.props.controller.form.submit();\n    };\n  }\n\n  render() {\n    const {form, serverErrors, isPending} = this.props.controller;\n\n    return <div className=\"auth-page\">\n      <div className=\"container page\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3 col-xs-12\">\n            <h1 className=\"text-xs-center\">Sign up</h1>\n            <p className=\"text-xs-center\">\n              <Link to=\"/login\">Have an account?</Link>\n            </p>\n\n            {serverErrors && <ul className=\"error-messages\">\n              {serverErrors.map((error, i) => <li key={i}>{error}</li>)}\n            </ul>}\n\n            <form onSubmit={this.onSubmit}>\n              <fieldset className=\"form-group\">\n                <Input\n                  inputClassName=\"form-control form-control-lg\"\n                  type=\"text\"\n                  placeholder=\"Your Name\"\n                  disabled={isPending}\n                  {...form.get('username')} />\n              </fieldset>\n              <fieldset className=\"form-group\">\n                <Input\n                  inputClassName=\"form-control form-control-lg\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  disabled={isPending}\n                  {...form.get('email')} />\n              </fieldset>\n              <fieldset className=\"form-group\">\n                <Input\n                  inputClassName=\"form-control form-control-lg\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  disabled={isPending}\n                  {...form.get('password')} />\n              </fieldset>\n              <button\n                className=\"btn btn-lg btn-primary pull-xs-right\"\n                disabled={isPending}>Sign up</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>;\n  }\n}\n\nRegister.propTypes = {\n  controller: PropTypes.object.isRequired\n};\n"],"names":["controller","ctrl","userController","form","serverErrors","currentUser","router","init","Form","children","name","validate","validation","required","getUsernameValidator","getPasswordValidator","actions","submit","register","getResult","onFormChange","username","email","password","then","Register","Component","constructor","super","this","onSubmit","e","preventDefault","props","render","isPending","className","to","map","error","i","key","inputClassName","type","placeholder","disabled","get","propTypes","PropTypes"],"sourceRoot":""}