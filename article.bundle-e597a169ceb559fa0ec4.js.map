{"version":3,"sources":["webpack:///./src/js/api/article.js","webpack:///./src/js/models/article.js","webpack:///./src/js/date-utils.js","webpack:///./src/js/components/article-author.js","webpack:///./src/js/components/tag-list.js","webpack:///./src/js/controllers/article.js","webpack:///./src/js/pages/article/article.js","webpack:///./src/js/pages/article/article-controller.js"],"names":["normalizeDates","obj","createdAt","Date","updatedAt","handleArticlesResult","result","articles","forEach","getGlobalFeed","offset","limit","get","then","toJson","getOwnFeed","getTagFeed","tag","getOwnArticles","author","getFavoriteArticles","favorited","getArticle","slug","encodeURIComponent","article","saveArticle","title","description","body","tagList","post","getResponseErrors","updateArticle","put","setFavorite","isFavorite","del","getArticleComments","comments","deleteArticle","postComment","comment","deleteComment","commentId","Article","articleData","User","favoritesCount","unshift","index","findIndex","id","splice","longFormat","Intl","DateTimeFormat","month","day","year","longDate","date","format","ArticleAuthor","to","username","src","image","className","propTypes","PropTypes","object","isRequired","TagList","length","map","i","key","Mvc","controller","currentUser","isAuthenticated","articleApi","router","transitionTo","Promise","reject","Error","Component","constructor","super","this","onDelete","props","setFollowing","onSubmit","e","preventDefault","form","submit","renderArticleMeta","pending","onClick","disabled","has","classNames","following","render","dangerouslySetInnerHTML","__html","markdown","toHTML","type","inputClassName","placeholder","inputProps","rows","bind","ctrl","params","articlesPromise","getComments","init","Form","actions","getResult","setComments","userController","articleController","addComment","clear"],"mappings":"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","file":"article.bundle-e597a169ceb559fa0ec4.js","sourcesContent":["import {get, post, put, del} from '../http';\nimport {toJson, getResponseErrors} from './utils';\n\nconst normalizeDates = (obj) => {\n  obj.createdAt = new Date(obj.createdAt);\n  obj.updatedAt = new Date(obj.updatedAt);\n};\n\nconst handleArticlesResult = (result) => {\n  result.articles.forEach(normalizeDates);\n\n  return result;\n};\n\nexport const getGlobalFeed = ({offset, limit}) => {\n  return get('articles', {offset, limit})\n    .then(toJson)\n    .then(handleArticlesResult);\n};\n\nexport const getOwnFeed = ({offset, limit}) => {\n  return get('articles/feed', {offset, limit})\n    .then(toJson)\n    .then(handleArticlesResult);\n};\n\nexport const getTagFeed = ({tag, offset, limit}) => {\n  return get('articles', {tag, offset, limit})\n    .then(toJson)\n    .then(handleArticlesResult);\n};\n\nexport const getOwnArticles = ({author, limit, offset}) => {\n  return get('articles', {author, offset, limit})\n    .then(toJson)\n    .then(handleArticlesResult);\n};\n\nexport const getFavoriteArticles = ({favorited, limit, offset}) => {\n  return get('articles', {favorited, offset, limit})\n    .then(toJson)\n    .then(handleArticlesResult);\n};\n\nexport const getArticle = ({slug}) => {\n  return get(`articles/${encodeURIComponent(slug)}`)\n    .then(toJson)\n    .then(({article}) => {\n      normalizeDates(article);\n\n      return {article};\n    });\n};\n\nexport const saveArticle = ({title, description, body, tagList}) => {\n  return post('articles', {\n    article: {\n      title,\n      description,\n      body,\n      tagList\n    }\n  }).then(toJson, getResponseErrors);\n};\n\nexport const updateArticle = ({slug, title, description, body, tagList}) => {\n  return put(`articles/${encodeURIComponent(slug)}`, {\n    article: {\n      title,\n      description,\n      body,\n      tagList\n    }\n  }).then(toJson, getResponseErrors);\n};\n\nexport const setFavorite = ({slug, isFavorite}) => {\n  const httpFunc = isFavorite ? post : del;\n\n  return httpFunc(`articles/${slug}/favorite`).then(toJson);\n};\n\nexport const getArticleComments = ({slug}) => {\n  return get(`articles/${encodeURIComponent(slug)}/comments`)\n    .then(toJson)\n    .then(({comments}) => {\n      comments.forEach(normalizeDates);\n\n      return {comments};\n    });\n};\n\nexport const deleteArticle = ({slug}) => {\n  return del(`articles/${encodeURIComponent(slug)}`);\n};\n\nexport const postComment = ({slug, comment}) => {\n  return post(`articles/${encodeURIComponent(slug)}/comments`, {\n    comment: {body: comment}\n  }).then(toJson).then(({comment}) => {\n    normalizeDates(comment);\n\n    return {comment};\n  });\n};\n\nexport const deleteComment = ({slug, commentId}) => {\n  return del(`articles/${encodeURIComponent(slug)}/comments/${commentId}`);\n};\n","import {User} from './user';\n\nexport function Article(articleData) {\n  const article = {\n    title: articleData.title,\n    author: new User(articleData.author),\n    description: articleData.description,\n    body: articleData.body,\n    slug: articleData.slug,\n    createdAt: articleData.createdAt,\n    updatedAt: articleData.updatedAt,\n    favorited: articleData.favorited,\n    favoritesCount: articleData.favoritesCount,\n    tagList: articleData.tagList,\n    comments: null\n  };\n\n  article.setFavorite = ({favorited, favoritesCount}) => {\n    article.favorited = favorited;\n    article.favoritesCount = favoritesCount;\n  };\n\n  article.setComments = (comments) => {\n    article.comments = comments;\n  };\n\n  article.addComment = (comment) => {\n    article.comments.unshift(comment);\n  };\n\n  article.deleteComment = (commentId) => {\n    const index = article.comments.findIndex((comment) => comment.id === commentId);\n\n    if (index !== -1) {\n      article.comments.splice(index, 1);\n    }\n  };\n\n  return article;\n}\n","const longFormat = new Intl.DateTimeFormat('en-US', {\n  month: 'short',\n  day: 'numeric',\n  year: 'numeric'\n});\n\nexport const longDate = (date) => longFormat.format(date);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'crizmas-router';\n\nimport {longDate} from '../date-utils';\n\nconst ArticleAuthor = ({article}) => <span>\n  <Link to={`/@${encodeURIComponent(article.author.username)}`}>\n    <img src={article.author.image} />&nbsp;\n  </Link>\n  <div className=\"info\">\n    <Link\n      to={`/@${encodeURIComponent(article.author.username)}`}\n      className=\"author\">{article.author.username}</Link>\n    <span className=\"date\">{longDate(article.createdAt)}</span>\n  </div>\n</span>;\n\nArticleAuthor.propTypes = {\n  article: PropTypes.object.isRequired\n};\n\nexport default ArticleAuthor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TagList = ({article}) => !!article.tagList.length && <ul className=\"tag-list\">\n  {article.tagList.map((tag, i) => <li\n    key={i}\n    className=\"tag-default tag-pill tag-outline\">\n    {tag}\n  </li>)}\n</ul>;\n\nTagList.propTypes = {\n  article: PropTypes.object.isRequired\n};\n\nexport default TagList;\n","import Mvc from 'crizmas-mvc';\n\nimport {currentUser} from '../models/user';\nimport * as articleApi from '../api/article';\nimport router from '../router';\n\nexport default Mvc.controller({\n  setFavorite: (article) => {\n    if (!currentUser.isAuthenticated) {\n      router.transitionTo('/register');\n\n      return Promise.reject(new Error('The user is not authenticated'));\n    }\n\n    return articleApi.setFavorite({slug: article.slug, isFavorite: !article.favorited})\n      .then((result) => {\n        article.setFavorite(result.article);\n      });\n  }\n});\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'crizmas-router';\nimport {Input} from 'crizmas-components';\nimport {markdown} from 'markdown';\nimport classNames from 'classnames';\n\nimport ArticleAuthor from '../../components/article-author';\nimport TagList from '../../components/tag-list';\nimport {longDate} from '../../date-utils';\n\nexport default class Article extends Component {\n  constructor() {\n    super();\n\n    this.onDelete = () => {\n      this.props.controller.deleteArticle();\n    };\n\n    this.setFollowing = () => {\n      this.props.controller.setFollowing();\n    };\n\n    this.setFavorite = () => {\n      this.props.controller.setFavorite();\n    };\n\n    this.onSubmit = (e) => {\n      e.preventDefault();\n      this.props.controller.form.submit();\n    };\n  }\n\n  renderArticleMeta() {\n    const {article, currentUser, pending} = this.props.controller;\n\n    return <div className=\"article-meta\">\n      <ArticleAuthor article={article} />\n\n      {article.author.username === currentUser.username && <span>\n        <Link\n          to={`/editor/${article.slug}`}\n          className=\"btn btn-sm btn-outline-secondary\">\n          <i className=\"ion-edit\" />&nbsp;\n          Edit Article\n        </Link>\n        &nbsp;\n        <button\n          className=\"btn btn-sm btn-outline-danger\"\n          onClick={this.onDelete}\n          disabled={pending.has('deleteArticle')}>\n          <i className=\"ion-trash-a\" />&nbsp;\n          Delete Article\n        </button>\n      </span>}\n      {article.author.username !== currentUser.username && <span>\n        <button\n          className={classNames('btn btn-sm', {\n            'btn-secondary': article.author.following,\n            'btn-outline-secondary': !article.author.following\n          })}\n          onClick={this.setFollowing}\n          disabled={pending.has('setFollowing')}>\n          <i className=\"ion-plus-round\" />&nbsp;\n          {article.author.following ? 'Unfollow' : 'Follow'} {article.author.username}\n        </button>\n        &nbsp;\n        <button\n          className={classNames('btn btn-sm', {\n            'btn-primary': article.favorited,\n            'btn-outline-primary': !article.favorited\n          })}\n          onClick={this.setFavorite}\n          disabled={pending.has('setFavorite')}>\n          <i className=\"ion-heart\" />&nbsp;\n          {article.favorited ? 'Unfavorite Article' : 'Favorite Article'}\n          ({article.favoritesCount})\n        </button>\n      </span>}\n    </div>;\n  }\n\n  render() {\n    const {article, article: {comments}, currentUser, form, deleteComment} = this.props.controller;\n\n    return <div className=\"article-page\">\n      <div className=\"banner\">\n        <div className=\"container\">\n          <h1>{article.title}</h1>\n\n          {this.renderArticleMeta()}\n        </div>\n      </div>\n\n      <div className=\"container page\">\n        <div className=\"row article-content\">\n          <div className=\"col-md-12\">\n            <div dangerouslySetInnerHTML={{__html: markdown.toHTML(article.body)}} />\n            <TagList article={article} />\n          </div>\n        </div>\n\n        <hr />\n\n        <div className=\"article-actions\">\n          {this.renderArticleMeta()}\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-xs-12 col-md-8 offset-md-2\">\n            <form className=\"card comment-form\" onSubmit={this.onSubmit}>\n              <div className=\"card-block\">\n                <Input\n                  type=\"textarea\"\n                  inputClassName=\"form-control\"\n                  placeholder=\"Write a comment...\"\n                  inputProps={{rows: \"3\"}}\n                  {...form} />\n              </div>\n              <div className=\"card-footer\">\n                <img\n                  src={currentUser.image}\n                  className=\"comment-author-img\" />\n                <button className=\"btn btn-sm btn-primary\">Post Comment</button>\n              </div>\n            </form>\n\n            {comments && !!comments.length && comments.map((comment, i) => <div\n              key={i}\n              className=\"card\">\n              <div className=\"card-block\">\n                <p className=\"card-text\">\n                  {comment.body}\n                </p>\n              </div>\n              <div className=\"card-footer\">\n                <Link\n                  to={`/@${encodeURIComponent(comment.author.username)}`}\n                  className=\"comment-author\">\n                  <img src={comment.author.image} className=\"comment-author-img\" />\n                </Link>\n                &nbsp;&nbsp;\n                <Link\n                  to={`/@${encodeURIComponent(comment.author.username)}`}\n                  className=\"comment-author\">{comment.author.username}</Link>\n                <span className=\"date-posted\">{longDate(comment.createdAt)}</span>\n                {comment.author.username === currentUser.username && <span className=\"mod-options\">\n                  <i className=\"ion-trash-a\" onClick={deleteComment.bind(null, comment.id)} />\n                </span>}\n              </div>\n            </div>)}\n          </div>\n        </div>\n      </div>\n    </div>;\n  }\n}\n\nArticle.propTypes = {\n  controller: PropTypes.object.isRequired\n};\n","import Mvc from 'crizmas-mvc';\nimport Form from 'crizmas-form';\n\nimport * as articleApi from '../../api/article';\nimport {currentUser} from '../../models/user';\nimport {Article} from '../../models/article';\nimport router from '../../router';\nimport userController from '../../controllers/user';\nimport articleController from '../../controllers/article';\n\nexport default Mvc.controller(function ArticleController() {\n  const ctrl = {\n    article: null,\n    currentUser,\n    form: null\n  };\n\n  ctrl.onEnter = () => {\n    const slug = router.params.get('slug');\n    const articlesPromise = ctrl.getArticle(slug);\n\n    articlesPromise.then(() => {\n      ctrl.getComments(slug);\n    });\n\n    return articlesPromise.then(\n      init,\n\n      () => {\n        router.transitionTo('/');\n\n        return false;\n      }\n    );\n  };\n\n  const init = () => {\n    ctrl.form = new Form({\n      actions: {\n        submit: () => {\n          ctrl.postComment(ctrl.form.getResult());\n        }\n      }\n    });\n  };\n\n  ctrl.getArticle = (slug) => {\n    return articleApi.getArticle({slug}).then(({article}) => {\n      ctrl.article = new Article(article);\n    });\n  };\n\n  ctrl.getComments = (slug) => {\n    return articleApi.getArticleComments({slug}).then(({comments}) => {\n      ctrl.article.setComments(comments);\n    });\n  };\n\n  ctrl.deleteArticle = () => {\n    return articleApi.deleteArticle({slug: ctrl.article.slug}).then(() => {\n      router.transitionTo('/');\n    });\n  };\n\n  ctrl.setFollowing = () => {\n    return userController.setFollowing(ctrl.article.author);\n  };\n\n  ctrl.setFavorite = () => {\n    return articleController.setFavorite(ctrl.article);\n  };\n\n  ctrl.postComment = (comment) => {\n    if (!currentUser.isAuthenticated) {\n      return router.transitionTo('/register');\n    }\n\n    return articleApi.postComment({slug: ctrl.article.slug, comment}).then(({comment}) => {\n      ctrl.article.addComment(comment);\n      ctrl.form.clear();\n    });\n  };\n\n  ctrl.deleteComment = (commentId) => {\n    return articleApi.deleteComment({slug: ctrl.article.slug, commentId}).then(() => {\n      ctrl.article.deleteComment(commentId);\n    });\n  };\n\n  return ctrl;\n});\n"],"sourceRoot":""}